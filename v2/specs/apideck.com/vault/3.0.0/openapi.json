{
  "openapi": "3.0.3",
  "servers": [
    {
      "description": "Production server",
      "url": "https://unify.apideck.com"
    }
  ],
  "info": {
    "contact": {
      "email": "hello@apideck.com",
      "url": "https://developers.apideck.com"
    },
    "description": "Welcome to the Vault API ðŸ‘‹\n\nWhen you're looking to connect to an API, the first step is authentication.\n\nVault helps you handle OAuth flows, store API keys, and refresh access tokens from users (called consumers in Apideck).\n\n## Base URL\n\nThe base URL for all API requests is `https://unify.apideck.com`\n\n## Get Started\n\nTo use the Apideck APIs, you need to sign up for free at [https://app.apideck.com/signup](). Follow the steps below to get started.\n\n- [Create a free account.](https://app.apideck.com/signup)\n- Go to the [Dashboard](https://app.apideck.com/unify/unified-apis/dashboard).\n- Get your API key and the application ID.\n- Select and configure the integrations you want to make available to your users. Through the Unify dashboard, you can configure which connectors you want to support as integrations.\n- Retrieve the client_id and client_secret for the integration you want to activate (Only needed for OAuth integrations).\n- Soon, you can skip the previous step and use the Apideck sandbox credentials to get you started instead (upcoming)\n- Register the redirect URI for the example app (https://unify.apideck.com/vault/callback) in the list of redirect URIs under your app's settings\n- Use the [publishing guides](/app-listing-requirements) to get your integration listed across app marketplaces.\n\n### Hosted Vault\n\nHosted Vault (vault.apideck.com) is a no-code solution, so you don't need to build your own UI to handle the integration settings and authentication.\n\n![Hosted Vault - Integrations portal](https://github.com/apideck-samples/integration-settings/raw/master/public/img/vault.png)\n\nBehind the scenes, Hosted Vault implements the Vault API endpoints and handles the following features for your customers:\n\n- Add a connection\n- Handle the OAuth flow\n- Configure connection settings per integration\n- Manage connections\n- Discover and propose integration options\n- Search for integrations (upcoming)\n- Give integration suggestions based on provided metadata (email or website) when creating the session (upcoming)\n\nTo use Hosted Vault, you will need to first [__create a session__](https://developers.apideck.com/apis/vault/reference#operation/createSession). This can be achieved by making a POST request to the Vault API to create a valid session for a user, hereafter referred to as the consumer ID.\n\nExample using curl:\n\n```\ncurl -X POST https://unify.apideck.com/vault/sessions\n    -H \"Content-Type: application/json\"\n    -H \"Authorization: Bearer <your-api-key>\"\n    -H \"X-APIDECK-CONSUMER-ID: <consumer-id>\"\n    -H \"X-APIDECK-APP-ID: <application-id>\"\n    -d '{\"consumer_metadata\": { \"account_name\" : \"Sample\", \"user_name\": \"vault@sample\", \"image\": \"https://unavatar.now.sh/jake\" }, \"theme\": { \"vault_name\": \"Intercom\", \"primary_color\": \"#286efa\", \"sidepanel_background_color\": \"#286efa\",\"sidepanel_text_color\": \"#FFFFFF\", \"favicon\": \"https://res.cloudinary.com/apideck/icons/intercom\" }}'\n```\n\n### Vault API\n\n_Beware, this is strategy takes more time to implement in comparison to Hosted Vault._\n\nIf you are building your integration settings UI manually, you can call the Vault API directly.\n\nThe Vault API is for those who want to completely white label the in-app integrations overview and authentication experience. All the available endpoints are listed below.\n\nThrough the API, your customers authenticate directly in your app, where Vault will still take care of redirecting to the auth provider and back to your app.\n\nIf you're already storing access tokens, we will help you migrate through our Vault Migration API (upcoming).\n\n## Domain model\n\nAt its core, a domain model creates a web of interconnected entities.\n\nOur domain model contains five main entity types: Consumer (user, account, team, machine), Application, Connector, Integration, and Connection.\n\n## Connection state\n\nThe connection state is computed based on the connection flow below.\n\n![](https://developers.apideck.com/api-references/vault/connection-flow.png)\n\n## How does Vault integrate with Unify and Proxy?\n\nThe only thing you need to use the Unify APIs and Proxy is the consumer id; thereafter, Vault will do the look-up in the background to handle the token injection before performing the API call(s).\n\n## Headers\n\nCustom headers that are expected as part of the request. Note that [RFC7230](https://tools.ietf.org/html/rfc7230) states header names are case insensitive.\n\n| Name                  | Type    | Required | Description                                                                                                                                                    |\n| --------------------- | ------- | -------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| x-apideck-app-id      | String  | Yes      | The id of your Unify application. Available at https://app.apideck.com/api-keys.                                                                               |\n| x-apideck-consumer-id | String  | Yes      | The id of the customer stored inside Apideck Vault. This can be a user id, account id, device id or whatever entity that can have integration within your app. |\n| x-apideck-raw         | Boolean | No       | Include raw response. Mostly used for debugging purposes.                                                                                                      |\n\n## Sandbox (upcoming)\n\nThe sandbox is pre-loaded with data similar to a real-life integrations setup. You can use the preconfigured OAauth configured connectors for testing purposes and can skip this step by using the Apideck sandbox credentials to get you started.\n\n## Guides\n\n- [How to build an integrations UI with Vault](https://github.com/apideck-samples/integration-settings)\n- How to configure the OAuth credentials for integration providers (COMING SOON)\n\n## FAQ\n\n**What purpose does Vault serve? Can I just handle the authentication and access token myself?**\nYou can store everything yourself, but that defeats the purpose of using Apideck Unify. Handling tokens for multiple providers can quickly become very complex.\n\n### Is my data secure?\n\nVault employs data minimization, therefore only requesting the minimum amount of scopes needed to perform an API request.\n\n### How do I migrate existing data?\n\nUsing our migration API, you can migrate the access tokens and accounts to Apideck Vault. (COMING SOON)\n\n### Can I use Vault in combination with existing integrations?\n\nYes, you can. The flexibility of Unify allows you to quickly the use cases you need while keeping a gradual migration path based on your timeline and requirements.\n\n### How does Vault work for Apideck Ecosystem customers?\n\nOnce logged in, pick your ecosystem; on the left-hand side of the screen, you'll have the option to create an application underneath the Unify section.\n\n### How to integrate Apideck Vault\n\nThis section covers everything you need to know to authenticate your customers through Vault.\nVault provides **three auth strategies** to use API tokens from your customers:\n\n- Vault API\n- Hosted Vault\n- Apideck Ecosystem _(COMING SOON)_\n\nYou can also opt to bypass Vault and still take care of authentication flows yourself. Make sure to put the right safeguards in place to protect your customers' tokens and other sensitive data.\n\n### What auth types does Vault support?\n\nWhat auth strategies does Vault handle? We currently support three flows so your customers can activate an integration.\n\n#### API keys\n\nFor Services supporting the API key strategy, you can use Hosted Vault will need to provide an in-app form where users can configure their API keys provided by the integration service.\n\n#### OAuth 2.0\n\n##### Authorization Code Grant Type Flow\n\nVault handles the complete Authorization Code Grant Type Flow for you. This flow only supports browser-based (passive) authentication because most identity providers don't allow entering a username and password to be entered into applications that they don't own.\n\nCertain connectors require an OAuth redirect authentication flow, where the end-user is redirected to the provider's website or mobile app to authenticate.\n\nThis is being handled by the `/authorize` endpoint.\n\n#### Basic auth\n\nBasic authentication is a simple authentication scheme built into the HTTP protocol. The required fields to complete basic auth are handled by Hosted Vault or by updating the connection through the Vault API below.\n",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title": "Vault API",
    "version": "3.0.0",
    "x-apisguru-categories": [
      "developer_tools"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_developers.apideck.com_icon.png"
    },
    "x-origin": [
      {
        "format": "openapi",
        "url": "https://raw.githubusercontent.com/apideck-libraries/openapi-specs/master/vault.yml",
        "version": "3.0"
      }
    ],
    "x-providerName": "apideck.com",
    "x-serviceName": "vault",
    "x-tags": [
      "partner"
    ]
  },
  "externalDocs": {
    "description": "Apideck Developer Docs",
    "url": "https://developers.apideck.com"
  },
  "security": [
    {
      "apiKey": [],
      "applicationId": []
    }
  ],
  "tags": [
    {
      "description": "",
      "name": "Sessions"
    },
    {
      "description": "",
      "name": "Connections"
    },
    {
      "description": "",
      "name": "Consumers"
    }
  ],
  "paths": {
    "/vault/authorize/{service_id}/{application_id}": {
      "get": {
        "description": "__In most cases the authorize link is provided in the ``/connections`` endpoint. Normally you don't need to manually generate these links.__\n\nUse this endpoint to authenticate a user with a connector. It will return a 302 redirect to the downstream connector endpoints.\n\nAuth links will have a state parameter included to verify the validity of the request. This is the url your users will use to activate OAuth supported integation providers.\n\nVault handles the complete Authorization Code Grant Type Flow for you and will redirect you to the dynamic redirect uri you have appended to the url in case this is missing the default redirect uri you have configured for your Unify application.\n",
        "operationId": "authorize",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_id"
          },
          {
            "$ref": "#/components/parameters/application_id"
          },
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/redirect_uri"
          },
          {
            "$ref": "#/components/parameters/scope"
          }
        ],
        "responses": {
          "302": {
            "description": "redirect"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Authorize",
        "tags": [
          "Connections"
        ]
      }
    },
    "/vault/connections": {
      "get": {
        "description": "This endpoint includes all the configured integrations and contains the required assets\nto build an integrations page where your users can install integrations.\nOAuth2 supported integrations will contain authorize and revoke links to handle the authentication flows.\n",
        "operationId": "connectionsAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-consumer-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/api"
          },
          {
            "$ref": "#/components/parameters/configured"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetConnections"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Get all connections",
        "tags": [
          "Connections"
        ]
      },
      "post": {
        "description": "Create a connection",
        "operationId": "connectionsCreate",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-consumer-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "description": "Service ID of the resource to return",
            "example": "pipedrive",
            "in": "query",
            "name": "service_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unified API",
            "example": "crm",
            "in": "query",
            "name": "unified_api",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateConnectionRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateConnection"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Create connection",
        "tags": [
          "Connections"
        ]
      }
    },
    "/vault/connections/{unified_api}/{service_id}": {
      "delete": {
        "description": "Deletes a connection",
        "operationId": "deleteConnection",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-consumer-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/service_id"
          },
          {
            "$ref": "#/components/parameters/unified_api"
          }
        ],
        "responses": {
          "204": {
            "description": "Resource deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Deletes a connection",
        "tags": [
          "Connections"
        ]
      },
      "patch": {
        "description": "Update a connection",
        "operationId": "connectionsUpdate",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-consumer-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/service_id"
          },
          {
            "$ref": "#/components/parameters/unified_api"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateConnectionRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateConnection"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Update connection",
        "tags": [
          "Connections"
        ]
      },
      "post": {
        "description": "Create an authorized connection\n",
        "operationId": "connectionsAdd",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-consumer-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/service_id"
          },
          {
            "$ref": "#/components/parameters/unified_api"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateConnectionRequestBody"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateConnection"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Create connection",
        "tags": [
          "Connections"
        ]
      }
    },
    "/vault/connections/{unified_api}/{service_id}/{resource}/config": {
      "get": {
        "description": "This endpoint returns custom settings and their defaults required by connection for a given resource.\n",
        "operationId": "getConnectionSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-consumer-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/unified_api"
          },
          {
            "$ref": "#/components/parameters/service_id"
          },
          {
            "$ref": "#/components/parameters/resource"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetConnection"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Get settings",
        "tags": [
          "Connections"
        ]
      },
      "patch": {
        "description": "Update default values for a connection's resource settings",
        "operationId": "updateConnectionSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-consumer-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/service_id"
          },
          {
            "$ref": "#/components/parameters/unified_api"
          },
          {
            "$ref": "#/components/parameters/resource"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connection"
              }
            }
          },
          "description": "Fields that need to be updated on the resource",
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateConnection"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Update settings",
        "tags": [
          "Connections"
        ]
      }
    },
    "/vault/consumers": {
      "get": {
        "description": "This endpoint includes all application consumers, along with an aggregated count of requests made.\n",
        "operationId": "consumersAll",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetConsumers"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Get all consumers",
        "tags": [
          "Consumers"
        ]
      }
    },
    "/vault/consumers/{consumer_id}": {
      "get": {
        "description": "Consumer detail including their aggregated counts with the connections they have authorized.\n",
        "operationId": "consumersOne",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/consumer_id"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetConsumer"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Get consumer",
        "tags": [
          "Consumers"
        ]
      }
    },
    "/vault/consumers/{consumer_id}/stats": {
      "get": {
        "description": "Get consumer request counts within a given datetime range.\n",
        "operationId": "consumerRequestCounts",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/consumer_id"
          },
          {
            "$ref": "#/components/parameters/start_datetime"
          },
          {
            "$ref": "#/components/parameters/end_datetime"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConsumerRequestCountsInDateRange"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Consumer request counts",
        "tags": [
          "Consumers"
        ]
      }
    },
    "/vault/proxy": {
      "post": {
        "deprecated": true,
        "description": "**Note**: This endpoint is deprecated in favor of the [Proxy API](https://docs.apideck.com/apis/proxy). Please use the new API as documented at https://docs.apideck.com/apis/proxy\n",
        "operationId": "proxyCall",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-consumer-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-service-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-downstream-authorization"
          },
          {
            "$ref": "#/components/parameters/x-apideck-downstream-url"
          },
          {
            "$ref": "#/components/parameters/x-apideck-downstream-method"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "account_sid": "ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                  "api_version": "2010-04-01",
                  "body": "This is the ship that made the Kessel Run in fourteen parsecs?",
                  "date_created": "Thu, 30 Jul 2015 20:12:31 +0000",
                  "date_sent": "Thu, 30 Jul 2015 20:12:33 +0000",
                  "date_updated": "Thu, 30 Jul 2015 20:12:33 +0000",
                  "direction": "outbound-api",
                  "error_code": null,
                  "error_message": null,
                  "from": "+15017122661",
                  "messaging_service_sid": "MGXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                  "num_media": "0",
                  "num_segments": "1",
                  "price": null,
                  "price_unit": null,
                  "sid": "SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                  "status": "sent",
                  "subresource_uris": {
                    "media": "/2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Media.json"
                  },
                  "to": "+15558675310",
                  "uri": "/2010-04-01/Accounts/ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/Messages/SMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.json"
                },
                "properties": {},
                "type": "object"
              }
            }
          },
          "description": "Depending on the verb/method of the request this will contain the request body you want to POST/PATCH/PUT.",
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/Ok"
          },
          "default": {
            "$ref": "#/components/responses/ProxyError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Proxy call",
        "tags": [
          "Proxy"
        ]
      }
    },
    "/vault/revoke/{service_id}/{application_id}": {
      "get": {
        "description": "__In most cases the authorize link is provided in the ``/connections`` endpoint. Normally you don't need to manually generate these links.__\n\nUse this endpoint to revoke an existing OAuth connector.\n\nAuth links will have a state parameter included to verify the validity of the request. This is the url your users will use to activate OAuth supported integation providers.\n\nVault handles the complete revoke flow for you and will redirect you to the dynamic redirect uri you have appended to the url in case this is missing the default redirect uri you have configured for your Unify application.\n",
        "operationId": "revoke",
        "parameters": [
          {
            "$ref": "#/components/parameters/service_id"
          },
          {
            "$ref": "#/components/parameters/application_id"
          },
          {
            "$ref": "#/components/parameters/state"
          },
          {
            "$ref": "#/components/parameters/redirect_uri"
          }
        ],
        "responses": {
          "302": {
            "description": "redirect"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Revoke",
        "tags": [
          "Connections"
        ]
      }
    },
    "/vault/sessions": {
      "post": {
        "description": "Making a POST request to this endpoint will initiate a Hosted Vault session. Redirect the consumer to the returned\nurl to allow temporary access to manage their integrations and settings.\n\nNote: This is a short lived token that will expire after 1 hour (TTL: 3600).\n",
        "operationId": "createSession",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-apideck-consumer-id"
          },
          {
            "$ref": "#/components/parameters/x-apideck-app-id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionRequest"
              }
            }
          },
          "description": "Additional redirect uri and/or consumer metadata",
          "required": false
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateSession"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "402": {
            "$ref": "#/components/responses/PaymentRequired"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/Unprocessable"
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Create Session",
        "tags": [
          "Sessions"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "api": {
        "description": "Scope results to Unified API",
        "example": "crm",
        "in": "query",
        "name": "api",
        "schema": {
          "type": "string"
        }
      },
      "application_id": {
        "description": "Application ID of the resource to return",
        "in": "path",
        "name": "application_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "configured": {
        "description": "Scopes results to connections that have been configured or not",
        "example": true,
        "in": "query",
        "name": "configured",
        "schema": {
          "type": "boolean"
        }
      },
      "consumer_id": {
        "description": "ID of the consumer to return",
        "example": "test_user_id",
        "in": "path",
        "name": "consumer_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "cursor": {
        "description": "Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.",
        "in": "query",
        "name": "cursor",
        "schema": {
          "default": null,
          "nullable": true,
          "type": "string"
        }
      },
      "end_datetime": {
        "description": "Scopes results to requests that happened before datetime",
        "example": "2021-05-30T12:00:00.000Z",
        "in": "query",
        "name": "end_datetime",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "id": {
        "description": "ID of the record you are acting upon.",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "description": "Number of records to return",
        "in": "query",
        "name": "limit",
        "schema": {
          "default": 20,
          "maximum": 200,
          "minimum": 1,
          "type": "integer"
        }
      },
      "raw": {
        "description": "Include raw response. Mostly used for debugging purposes",
        "in": "query",
        "name": "raw",
        "schema": {
          "default": true,
          "type": "boolean"
        }
      },
      "redirect_uri": {
        "description": "URL to redirect back to after authorization. When left empty the default configured redirect uri will be used.",
        "example": "http://example.com/integrations",
        "in": "query",
        "name": "redirect_uri",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "resource": {
        "description": "Resource Name",
        "example": "leads",
        "in": "path",
        "name": "resource",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "scope": {
        "description": "One or more OAuth scopes to request from the connector. OAuth scopes control the set of resources and operations that are allowed after authorization. Refer to the connector's documentation for the available scopes.",
        "example": [
          "openid",
          "leads:write",
          "profile:read"
        ],
        "explode": false,
        "in": "query",
        "name": "scope",
        "schema": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "style": "spaceDelimited"
      },
      "service_id": {
        "description": "Service ID of the resource to return",
        "example": "pipedrive",
        "in": "path",
        "name": "service_id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "start_datetime": {
        "description": "Scopes results to requests that happened after datetime",
        "example": "2021-05-01T12:00:00.000Z",
        "in": "query",
        "name": "start_datetime",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "state": {
        "description": "An opaque value the applications adds to the initial request that the authorization server includes when redirecting the back to the application. This value must be used by the application to prevent CSRF attacks.",
        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsInVuaWZpZWRfYXBpIjoiZGVmYXVsdCIsInNlcnZpY2VfaWQiOiJ0ZWFtbGVhZGVyIiwiYXBwbGljYXRpb25faWQiOiIxMTExIiwiaWF0IjoxNjIyMTI2Nzg3fQ.97_pn1UAXc7mctXBdr15czUNO1jjdQ9sJUOIE_Myzbk",
        "in": "query",
        "name": "state",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "unified_api": {
        "description": "Unified API",
        "example": "crm",
        "in": "path",
        "name": "unified_api",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "x-apideck-app-id": {
        "description": "The ID of your Unify application",
        "in": "header",
        "name": "x-apideck-app-id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "x-apideck-consumer-id": {
        "description": "ID of the consumer which you want to get or push data from",
        "in": "header",
        "name": "x-apideck-consumer-id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "x-apideck-downstream-authorization": {
        "description": "Downstream authorization header. This will skip the Vault token injection.",
        "example": "Bearer XXXXXXXXXXXXXXXXX",
        "in": "header",
        "name": "x-apideck-downstream-authorization",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "x-apideck-downstream-method": {
        "description": "Downstream method. If not provided the upstream method will be inherited,",
        "example": "POST",
        "in": "header",
        "name": "x-apideck-downstream-method",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "x-apideck-downstream-url": {
        "description": "Downstream URL",
        "example": "https://api.twilio.com",
        "in": "header",
        "name": "x-apideck-downstream-url",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "x-apideck-service-id": {
        "description": "Provide the service id you want to call (e.g., pipedrive). [See the full list in the connector section.](#section/Connectors) Only needed when a consumer has activated multiple integrations for a Unified API.",
        "in": "header",
        "name": "x-apideck-service-id",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "CreateConnectionRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateConnectionRequestBody"
            }
          }
        },
        "description": "Fields to be persisted as Connection",
        "required": true
      },
      "UpdateConnectionRequestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateConnectionRequestBody"
            }
          }
        },
        "description": "Fields to be updated on the resource",
        "required": true
      }
    },
    "responses": {
      "BadRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BadRequest"
            }
          }
        },
        "description": "Bad Request"
      },
      "ConsumerRequestCountsInDateRange": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsumerRequestCountsInDateRangeResponse"
            }
          }
        },
        "description": "Consumers Request Counts within Date Range"
      },
      "CreateConnection": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateConnectionResponse"
            }
          }
        },
        "description": "Connection created"
      },
      "CreateSession": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CreateSessionResponse"
            }
          }
        },
        "description": "Session created"
      },
      "Created": {
        "content": {
          "application/json": {
            "example": {},
            "schema": {}
          }
        },
        "description": "Resource created"
      },
      "Deleted": {
        "content": {
          "application/json": {
            "example": {},
            "schema": {}
          }
        },
        "description": "Resource succesfully deleted"
      },
      "GetConnection": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetConnectionResponse"
            }
          }
        },
        "description": "Connection"
      },
      "GetConnections": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetConnectionsResponse"
            }
          }
        },
        "description": "All Connections"
      },
      "GetConsumer": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetConsumerResponse"
            }
          }
        },
        "description": "Consumer"
      },
      "GetConsumers": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetConsumersResponse"
            }
          }
        },
        "description": "All Consumers"
      },
      "NoContent": {
        "content": {
          "application/json": {
            "example": {},
            "schema": {}
          }
        },
        "description": "No content"
      },
      "NotFound": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotFoundResponse"
            }
          }
        },
        "description": "The specified resource was not found"
      },
      "NotImplemented": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotImplemented"
            }
          }
        },
        "description": "Not Implemented"
      },
      "Ok": {
        "content": {
          "application/json": {
            "example": {},
            "schema": {}
          }
        },
        "description": "Ok"
      },
      "PaymentRequired": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PaymentRequired"
            }
          }
        },
        "description": "Payment Required"
      },
      "ProxyError": {
        "content": {
          "application/json": {
            "schema": {}
          }
        },
        "description": "Proxy error",
        "headers": {
          "x-apideck-downstream-error": {
            "schema": {
              "description": "Indicates if the error returned in the body is from the downstream",
              "type": "boolean"
            }
          }
        }
      },
      "Unauthorized": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Unauthorized"
            }
          }
        },
        "description": "Unauthorized"
      },
      "UnexpectedError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UnexpectedError"
            }
          }
        },
        "description": "Unexpected error"
      },
      "Unprocessable": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Unprocessable"
            }
          }
        },
        "description": "Unprocessable"
      },
      "UpdateConnection": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateConnectionResponse"
            }
          }
        },
        "description": "Connection updated"
      },
      "Updated": {
        "content": {
          "application/json": {
            "example": {},
            "schema": {}
          }
        },
        "description": "Resource updated"
      }
    },
    "schemas": {
      "BadRequest": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "description": "Contains parameter or domain specific information related to the error and why it occured.",
            "example": {
              "missing": [
                [
                  {
                    "foobar": "required"
                  }
                ]
              ]
            }
          },
          "error": {
            "description": "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "example": "Bad Request",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error.",
            "example": "Invalid Params",
            "type": "string"
          },
          "ref": {
            "description": "Link to documentation of error type",
            "example": "https://developers.apideck.com/errors#requestbodyvalidationerror",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP status code",
            "example": 400,
            "type": "number"
          },
          "typeName": {
            "description": "The type of error returned",
            "example": "RequestHeadersValidationError",
            "type": "string"
          }
        }
      },
      "Connection": {
        "properties": {
          "auth_type": {
            "enum": [
              "oauth2",
              "apiKey",
              "basic"
            ],
            "nullable": true,
            "type": "string"
          },
          "authorize_url": {
            "example": "https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>",
            "nullable": true,
            "type": "string"
          },
          "configurable_resources": {
            "example": [
              "opportunities",
              "companies",
              "contacts",
              "leads"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "configuration": {
            "items": {
              "properties": {
                "defaults": {
                  "items": {
                    "properties": {
                      "id": {
                        "example": "ProductInterest",
                        "type": "string"
                      },
                      "options": {
                        "items": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/FormFieldOption",
                              "type": "object"
                            },
                            {
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "label": {
                                  "example": "General Channel",
                                  "type": "string"
                                },
                                "options": {
                                  "items": {
                                    "$ref": "#/components/schemas/FormFieldOption"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "target": {
                        "enum": [
                          "custom_fields",
                          "resource"
                        ],
                        "example": "custom_fields",
                        "readOnly": true,
                        "type": "string"
                      },
                      "value": {
                        "anyOf": [
                          {
                            "example": "GC5000 series",
                            "type": "string"
                          },
                          {
                            "example": 10,
                            "type": "integer"
                          },
                          {
                            "example": 10.5,
                            "type": "number"
                          },
                          {
                            "example": true,
                            "type": "boolean"
                          },
                          {
                            "items": {
                              "anyOf": [
                                {
                                  "example": "GC6000 series",
                                  "type": "string"
                                },
                                {
                                  "example": 10,
                                  "type": "integer"
                                },
                                {
                                  "example": 10.5,
                                  "type": "number"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "resource": {
                  "example": "leads",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "created_at": {
            "example": 1615563533390,
            "type": "number"
          },
          "enabled": {
            "example": true,
            "type": "boolean"
          },
          "form_fields": {
            "example": [
              {
                "custom_field": false,
                "disabled": false,
                "id": "instance_url",
                "label": "Instance url",
                "mask": false,
                "placeholder": "",
                "required": true,
                "type": "text",
                "value": "https://eu28.salesforce.com"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/FormField"
            },
            "type": "array"
          },
          "icon": {
            "example": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png",
            "type": "string"
          },
          "id": {
            "example": "lead+close",
            "readOnly": true,
            "type": "string"
          },
          "logo": {
            "example": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg",
            "type": "string"
          },
          "metadata": {
            "example": {
              "account": {
                "id": "c01458a5-7276-41ce-bc19-639906b0450a",
                "name": "My Company"
              },
              "ecosystem": {
                "id": "a6469332-7948-46a6-abc2-87ba3f005025",
                "name": "My Ecosystem"
              }
            },
            "nullable": true,
            "properties": {
              "account": {
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "ecosystem": {
                "$ref": "#/components/schemas/Connection/properties/metadata/properties/account"
              }
            },
            "type": "object"
          },
          "name": {
            "example": "Salesforce",
            "type": "string"
          },
          "resource_schema_support": {
            "example": [
              "leads"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resource_settings_support": {
            "example": [
              "leads"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "revoke_url": {
            "example": "https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>",
            "nullable": true,
            "type": "string"
          },
          "service_id": {
            "example": "salesforce",
            "type": "string"
          },
          "settings": {
            "description": "Connection settings. Values will persist to `form_fields` with corresponding id",
            "example": {
              "instance_url": "https://eu28.salesforce.com"
            },
            "nullable": true,
            "type": "object"
          },
          "settings_required_for_authorization": {
            "example": [
              "instance_url"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "state": {
            "enum": [
              "available",
              "callable",
              "added",
              "authorized"
            ],
            "example": "authorized",
            "type": "string"
          },
          "status": {
            "enum": [
              "live",
              "upcoming",
              "requested"
            ],
            "type": "string"
          },
          "tag_line": {
            "example": "CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.",
            "type": "string"
          },
          "unified_api": {
            "example": "crm",
            "type": "string"
          },
          "updated_at": {
            "example": 1616662325753,
            "type": "number"
          },
          "website": {
            "example": "https://www.salesforce.com",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConsumerRequestCountsInDateRangeResponse": {
        "properties": {
          "data": {
            "properties": {
              "aggregated_request_count": {
                "example": 40,
                "type": "number"
              },
              "application_id": {
                "example": "1111",
                "type": "string"
              },
              "consumer_id": {
                "example": "test_user_id",
                "type": "string"
              },
              "end_datetime": {
                "example": "2021-05-10T12:00:00.000Z",
                "type": "string"
              },
              "request_counts": {
                "$ref": "#/components/schemas/RequestCountAllocation"
              },
              "start_datetime": {
                "example": "2021-05-01T12:00:00.000Z",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "HTTP Response Status",
            "example": "OK",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP Response Status Code",
            "example": 200,
            "type": "integer"
          }
        },
        "required": [
          "status_code",
          "status",
          "data"
        ],
        "type": "object"
      },
      "CreateConnectionRequestBody": {
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/Connection/properties/enabled"
          },
          "metadata": {
            "$ref": "#/components/schemas/Connection/properties/metadata"
          },
          "settings": {
            "$ref": "#/components/schemas/Connection/properties/settings"
          }
        },
        "type": "object"
      },
      "CreateConnectionResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Connection"
          },
          "status": {
            "description": "HTTP Response Status",
            "example": "OK",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP Response Status Code",
            "example": 201,
            "type": "integer"
          }
        },
        "required": [
          "status_code",
          "status",
          "data"
        ],
        "type": "object"
      },
      "CreateSessionResponse": {
        "properties": {
          "data": {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Session"
              }
            }
          },
          "status": {
            "description": "HTTP Response Status",
            "example": "OK",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP Response Status Code",
            "example": 200,
            "type": "integer"
          }
        },
        "required": [
          "status_code",
          "status",
          "data"
        ],
        "type": "object"
      },
      "Created": {
        "properties": {},
        "required": [
          ""
        ],
        "type": "object"
      },
      "FormField": {
        "properties": {
          "custom_field": {
            "type": "boolean"
          },
          "description": {
            "example": "Slack channel to push notification to",
            "nullable": true,
            "type": "string"
          },
          "disabled": {
            "nullable": true,
            "type": "boolean"
          },
          "id": {
            "example": "channel",
            "type": "string"
          },
          "label": {
            "example": "Channel",
            "type": "string"
          },
          "options": {
            "items": {
              "properties": {
                "label": {
                  "example": "General Channel",
                  "type": "string"
                },
                "value": {
                  "anyOf": [
                    {
                      "example": "general",
                      "type": "string"
                    },
                    {
                      "example": 123,
                      "type": "integer"
                    },
                    {
                      "example": 12.5,
                      "type": "number"
                    },
                    {
                      "example": true,
                      "type": "boolean"
                    },
                    {
                      "example": [
                        "team",
                        "general"
                      ],
                      "items": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  ]
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "placeholder": {
            "example": "Select a channel",
            "nullable": true,
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "enum": [
              "text",
              "checkbox",
              "tel",
              "email",
              "url",
              "textarea",
              "select",
              "filtered-select",
              "multi-select",
              "datetime",
              "date",
              "time",
              "number"
            ]
          }
        },
        "type": "object"
      },
      "FormFieldOption": {
        "properties": {
          "label": {
            "example": "General Channel",
            "type": "string"
          },
          "value": {
            "anyOf": [
              {
                "example": "general",
                "type": "string"
              },
              {
                "example": 123,
                "type": "integer"
              },
              {
                "example": 12.5,
                "type": "number"
              },
              {
                "example": true,
                "type": "boolean"
              },
              {
                "example": [
                  "team",
                  "general"
                ],
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "type": "array"
              }
            ]
          }
        },
        "type": "object"
      },
      "GetConnectionResponse": {
        "properties": {
          "data": {
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Connection"
              }
            }
          },
          "status": {
            "description": "HTTP Response Status",
            "example": "OK",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP Response Status Code",
            "example": 200,
            "type": "integer"
          }
        },
        "required": [
          "status_code",
          "status",
          "data"
        ],
        "type": "object"
      },
      "GetConnectionsResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Connection"
            },
            "type": "array"
          },
          "status": {
            "description": "HTTP Response Status",
            "example": "OK",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP Response Status Code",
            "example": 200,
            "type": "integer"
          }
        },
        "required": [
          "status_code",
          "status",
          "data"
        ],
        "type": "object"
      },
      "GetConsumerResponse": {
        "properties": {
          "data": {
            "properties": {
              "data": {
                "properties": {
                  "aggregated_request_count": {
                    "example": 101,
                    "type": "number"
                  },
                  "connections": {
                    "items": {
                      "properties": {
                        "auth_type": {
                          "enum": [
                            "oauth2",
                            "apiKey",
                            "basic"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "created_at": {
                          "example": "2020-09-19T12:18:37.071Z",
                          "type": "string"
                        },
                        "enabled": {
                          "example": true,
                          "type": "boolean"
                        },
                        "icon": {
                          "example": "https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png",
                          "type": "string"
                        },
                        "id": {
                          "example": "1111+test_user_id",
                          "readOnly": true,
                          "type": "string"
                        },
                        "logo": {
                          "example": "https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg",
                          "type": "string"
                        },
                        "name": {
                          "example": "Salesforce",
                          "type": "string"
                        },
                        "service_id": {
                          "example": "teamleader",
                          "type": "string"
                        },
                        "state": {
                          "enum": [
                            "available",
                            "callable",
                            "added",
                            "configured",
                            "authorized"
                          ],
                          "example": "authorized",
                          "type": "string"
                        },
                        "unified_api": {
                          "example": "crm",
                          "type": "string"
                        },
                        "updated_at": {
                          "example": "2020-09-19T12:18:37.071Z",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "consumer_id": {
                    "example": "test_consumer_id",
                    "type": "string"
                  },
                  "request_count_updated": {
                    "example": "2021-05-07T12:55:42.242Z",
                    "type": "string"
                  },
                  "request_counts": {
                    "$ref": "#/components/schemas/RequestCountAllocation"
                  }
                },
                "type": "object"
              }
            }
          },
          "status": {
            "description": "HTTP Response Status",
            "example": "OK",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP Response Status Code",
            "example": 200,
            "type": "integer"
          }
        },
        "required": [
          "status_code",
          "status",
          "data"
        ],
        "type": "object"
      },
      "GetConsumersResponse": {
        "properties": {
          "data": {
            "items": {
              "properties": {
                "aggregated_request_count": {
                  "example": 101,
                  "type": "number"
                },
                "consumer_id": {
                  "example": "test_consumer_id",
                  "type": "string"
                },
                "request_count_updated": {
                  "example": "2021-05-07T12:55:42.242Z",
                  "type": "string"
                },
                "request_counts": {
                  "$ref": "#/components/schemas/RequestCountAllocation"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "description": "Links to navigate to previous or next pages through the API",
            "example": {
              "current": "https://unify.apideck.com/vault/consumers",
              "next": "https://unify.apideck.com/vault/consumers?cursor=em9oby1jcm06OnBhZ2U6OjM",
              "previous": "https://unify.apideck.com/vault/consumers?cursor=em9oby1jcm06OnBhZ2U6OjE%3D"
            },
            "properties": {
              "current": {
                "description": "Link to navigate to the current page through the API",
                "example": "https://unify.apideck.com/crm/companies",
                "type": "string"
              },
              "next": {
                "description": "Link to navigate to the previous page through the API",
                "example": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM",
                "nullable": true,
                "type": "string"
              },
              "previous": {
                "description": "Link to navigate to the previous page through the API",
                "example": "https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D",
                "nullable": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "meta": {
            "description": "Reponse metadata",
            "properties": {
              "cursors": {
                "description": "Cursors to navigate to previous or next pages through the API",
                "properties": {
                  "current": {
                    "description": "Cursor to navigate to the current page of results through the API",
                    "example": "em9oby1jcm06OnBhZ2U6OjI=",
                    "nullable": true,
                    "type": "string"
                  },
                  "next": {
                    "description": "Cursor to navigate to the next page of results through the API",
                    "example": "em9oby1jcm06OnBhZ2U6OjM=",
                    "nullable": true,
                    "type": "string"
                  },
                  "previous": {
                    "description": "Cursor to navigate to the previous page of results through the API",
                    "example": "em9oby1jcm06OnBhZ2U6OjE=",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "items_on_page": {
                "description": "Number of items returned in the data property of the response",
                "example": 50,
                "type": "integer"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "HTTP Response Status",
            "example": "OK",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP Response Status Code",
            "example": 200,
            "type": "integer"
          }
        },
        "required": [
          "status_code",
          "status",
          "data"
        ],
        "type": "object"
      },
      "NotFoundResponse": {
        "properties": {
          "detail": {
            "description": "Contains parameter or domain specific information related to the error and why it occured.",
            "example": "Could not find widget with id: '123'",
            "type": "string"
          },
          "error": {
            "description": "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "example": "Not Found",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error.",
            "example": "Unknown Widget",
            "type": "string"
          },
          "ref": {
            "description": "Link to documentation of error type",
            "example": "https://developers.apideck.com/errors#entitynotfounderror",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP status code",
            "example": 404,
            "type": "number"
          },
          "typeName": {
            "description": "The type of error returned",
            "example": "EntityNotFoundError",
            "type": "string"
          }
        }
      },
      "NotImplemented": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "description": "Contains parameter or domain specific information related to the error and why it occured.",
            "example": "Failed to retrieve Widget tokenUrl from 'components.securitySchemes.oauth2.flows'"
          },
          "error": {
            "description": "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "example": "Not Implemented",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error.",
            "example": "Unmapped Attribute",
            "type": "string"
          },
          "ref": {
            "description": "Link to documentation of error type",
            "example": "https://developers.apideck.com/errors#mappingerror",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP status code",
            "example": 501,
            "type": "number"
          },
          "typeName": {
            "description": "The type of error returned",
            "example": "MappingError",
            "type": "string"
          }
        }
      },
      "PaymentRequired": {
        "properties": {
          "detail": {
            "description": "Contains parameter or domain specific information related to the error and why it occured.",
            "example": "You have reached your limit of 2000",
            "type": "string"
          },
          "error": {
            "description": "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "example": "Payment Required",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error.",
            "example": "Request Limit Reached",
            "type": "string"
          },
          "ref": {
            "description": "Link to documentation of error type",
            "example": "https://developers.apideck.com/errors#requestlimiterror",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP status code",
            "example": 402,
            "type": "number"
          },
          "typeName": {
            "description": "The type of error returned",
            "example": "RequestLimitError",
            "type": "string"
          }
        }
      },
      "RequestCountAllocation": {
        "properties": {
          "proxy": {
            "example": 10,
            "type": "number"
          },
          "unify": {
            "example": 100,
            "type": "number"
          },
          "vault": {
            "example": 21,
            "type": "number"
          }
        },
        "type": "object"
      },
      "Session": {
        "properties": {
          "session_uri": {
            "example": "http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SessionRequest": {
        "properties": {
          "consumer_metadata": {
            "properties": {
              "account_name": {
                "example": "SpaceX",
                "type": "string"
              },
              "image": {
                "example": "https://www.spacex.com/static/images/share.jpg",
                "type": "string"
              },
              "user_name": {
                "example": "Elon Musk",
                "type": "string"
              }
            },
            "type": "object"
          },
          "redirect_uri": {
            "example": "https://mysaas.com/dashboard",
            "type": "string"
          },
          "theme": {
            "properties": {
              "favicon": {
                "example": "https://res.cloudinary.com/apideck/icons/intercom",
                "type": "string"
              },
              "primary_color": {
                "example": "#286efa",
                "type": "string"
              },
              "privacy_url": {
                "example": "https://compliance.apideck.com/privacy-policy",
                "type": "string"
              },
              "sidepanel_background_color": {
                "example": "#286efa",
                "type": "string"
              },
              "sidepanel_text_color": {
                "example": "#FFFFFF",
                "type": "string"
              },
              "terms_url": {
                "example": "https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e",
                "type": "string"
              },
              "vault_name": {
                "example": "Intercom",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Unauthorized": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "description": "Contains parameter or domain specific information related to the error and why it occured.",
            "example": "Failed to generate valid JWT Session. Verify applicationId is correct"
          },
          "error": {
            "description": "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "example": "Unauthorized",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error.",
            "example": "Unauthorized Request",
            "type": "string"
          },
          "ref": {
            "description": "Link to documentation of error type",
            "example": "https://developers.apideck.com/errors#unauthorizederror",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP status code",
            "example": 401,
            "type": "number"
          },
          "typeName": {
            "description": "The type of error returned",
            "example": "UnauthorizedError",
            "type": "string"
          }
        }
      },
      "UnexpectedError": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "description": "Contains parameter or domain specific information related to the error and why it occured.",
            "example": "Missing Header: x-apideck-consumer-id"
          },
          "error": {
            "description": "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "example": "Bad Request",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error.",
            "example": "Invalid Params",
            "type": "string"
          },
          "ref": {
            "description": "Link to documentation of error type",
            "example": "https://developers.apideck.com/errors#unauthorizederror",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP status code",
            "example": 400,
            "type": "number"
          },
          "typeName": {
            "description": "The type of error returned",
            "example": "RequestHeadersValidationError",
            "type": "string"
          }
        }
      },
      "Unprocessable": {
        "properties": {
          "detail": {
            "description": "Contains parameter or domain specific information related to the error and why it occured.",
            "example": "State did not include unified_api",
            "type": "string"
          },
          "error": {
            "description": "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
            "example": "Unprocessable Entity",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message providing more details about the error.",
            "example": "Invalid State",
            "type": "string"
          },
          "ref": {
            "description": "Link to documentation of error type",
            "example": "https://developers.apideck.com/errors#invalidstateerror",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP status code",
            "example": 422,
            "type": "number"
          },
          "typeName": {
            "description": "The type of error returned",
            "example": "InvalidStateError",
            "type": "string"
          }
        }
      },
      "UpdateConnectionRequestBody": {
        "$ref": "#/components/schemas/CreateConnectionRequestBody"
      },
      "UpdateConnectionResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Connection"
          },
          "status": {
            "description": "HTTP Response Status",
            "example": "OK",
            "type": "string"
          },
          "status_code": {
            "description": "HTTP Response Status Code",
            "example": 200,
            "type": "integer"
          }
        },
        "required": [
          "status_code",
          "status",
          "data"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "apiKey": {
        "description": "To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys. \nTo change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.\nYour Apideck application_id can also be found on the same page.\n\nAuthenticate your API requests by including your test or live secret API key in the request header. \n\n- Bearer authorization header: `Authorization: Bearer <your-apideck-api-key>`\n- Application id header: `x-apideck-app-id: <your-apideck-app-id>`\n\nYou should use the public keys on the SDKs and the secret keys to authenticate API requests.\n\n**Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.\n\nLearn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key\n\nGo to Unify to grab your API KEY https://app.apideck.com/unify/api-keys\n",
        "scheme": "bearer",
        "type": "http"
      },
      "applicationId": {
        "description": "The ID of your Unify application",
        "in": "header",
        "name": "x-apideck-app-id",
        "type": "apiKey"
      }
    }
  }
}