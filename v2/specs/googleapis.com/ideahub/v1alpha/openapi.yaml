openapi: 3.0.0
servers:
  - url: https://ideahub.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Idea Hub API
  version: v1alpha
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_upload.wikimedia.org_wikipedia_commons_e_e1_YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://ideahub.googleapis.com/$discovery/rest?version=v1alpha
      version: v1
  x-providerName: googleapis.com
  x-serviceName: ideahub
externalDocs:
  url: https://console.cloud.google.com/apis/library/ideahub.googleapis.com
tags:
  - name: ideas
  - name: platforms
paths:
  /v1alpha/ideas:
    get:
      description: List ideas for a given Creator and filter and sort options.
      operationId: ideahub.ideas.list
      parameters:
        - description: Identifies the platform from which this user is accessing Idea Hub.
          in: query
          name: creator.platform
          schema:
            enum:
              - UNKNOWN
              - BLOGGER
              - SITEKIT
            type: string
        - description: Identifies the platform account (blog/site/etc.) for which to fetch
            Ideas.
          in: query
          name: creator.platformId
          schema:
            type: string
        - description: Filter semantics described below.
          in: query
          name: filter
          schema:
            type: string
        - description: Order semantics described below.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of ideas per page. If unspecified, at most 10
            ideas will be returned. The maximum value is 2000; values above 2000
            will be coerced to 2000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Used to fetch next page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: "If defined, specifies the creator for which to filter by. Format:
            publishers/{publisher}/properties/{property}"
          in: query
          name: parent
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleSearchIdeahubV1alphaListIdeasResponse"
          description: Successful response
      tags:
        - ideas
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{name}":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Update an idea state resource.
      operationId: ideahub.platforms.properties.ideaStates.patch
      parameters:
        - description: "Unique identifier for the idea state. Format:
            platforms/{platform}/properties/{property}/ideaStates/{idea_state}"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The list of fields to be updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleSearchIdeahubV1alphaIdeaState"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleSearchIdeahubV1alphaIdeaState"
          description: Successful response
      tags:
        - platforms
  "/v1alpha/{parent}/ideas":
    get:
      description: List ideas for a given Creator and filter and sort options.
      operationId: ideahub.platforms.properties.ideas.list
      parameters:
        - description: "If defined, specifies the creator for which to filter by. Format:
            publishers/{publisher}/properties/{property}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Identifies the platform from which this user is accessing Idea Hub.
          in: query
          name: creator.platform
          schema:
            enum:
              - UNKNOWN
              - BLOGGER
              - SITEKIT
            type: string
        - description: Identifies the platform account (blog/site/etc.) for which to fetch
            Ideas.
          in: query
          name: creator.platformId
          schema:
            type: string
        - description: Filter semantics described below.
          in: query
          name: filter
          schema:
            type: string
        - description: Order semantics described below.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of ideas per page. If unspecified, at most 10
            ideas will be returned. The maximum value is 2000; values above 2000
            will be coerced to 2000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Used to fetch next page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleSearchIdeahubV1alphaListIdeasResponse"
          description: Successful response
      tags:
        - platforms
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1alpha/{parent}/locales":
    get:
      description: Returns which locales ideas are available in for a given Creator.
      operationId: ideahub.platforms.properties.locales.list
      parameters:
        - description: "Required. The web property to check idea availability for Format:
            platforms/{platform}/property/{property}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of locales to return. The service may return
            fewer than this value. If unspecified, at most 100 locales will be
            returned. The maximum value is 100; values above 100 will be coerced
            to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListAvailableLocales` call.
            Provide this to retrieve the subsequent page. When paginating, all
            other parameters provided to `ListAvailableLocales` must match the
            call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleSearchIdeahubV1alphaListAvailableLocalesRespo\
                  nse"
          description: Successful response
      tags:
        - platforms
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with
        API access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications.
        Can be any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleSearchIdeahubV1alphaAvailableLocale:
      description: Represents locales that are available for a web property.
      properties:
        locale:
          description: A string in BCP 47 format, without a resource prefix.
          type: string
        name:
          description: 'A string in BCP 47 format, prefixed with the platform and property
            name, and "locales/". Format:
            platforms/{platform}/properties/{property}/locales/{locale}'
          type: string
      type: object
    GoogleSearchIdeahubV1alphaIdea:
      description: A single Idea that we want to show the end user.
      properties:
        name:
          description: "Unique identifier for the idea. Format: ideas/{ideaId}"
          type: string
        text:
          description: The idea’s text.
          type: string
        topics:
          description: The Topics that match the idea.
          items:
            $ref: "#/components/schemas/GoogleSearchIdeahubV1alphaTopic"
          type: array
      type: object
    GoogleSearchIdeahubV1alphaIdeaState:
      description: Represents idea state specific to a web property.
      properties:
        dismissed:
          description: Whether the idea is dismissed.
          type: boolean
        name:
          description: "Unique identifier for the idea state. Format:
            platforms/{platform}/properties/{property}/ideaStates/{idea_state}"
          type: string
        saved:
          description: Whether the idea is saved.
          type: boolean
      type: object
    GoogleSearchIdeahubV1alphaListAvailableLocalesResponse:
      description: Response for whether ideas are available for a given web property
        on a platform, for the currently logged-in user.
      properties:
        availableLocales:
          description: Locales for which ideas are available for the given Creator.
          items:
            $ref: "#/components/schemas/GoogleSearchIdeahubV1alphaAvailableLocale"
          type: array
        nextPageToken:
          description: A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    GoogleSearchIdeahubV1alphaListIdeasResponse:
      properties:
        ideas:
          description: Results for the ListIdeasRequest.
          items:
            $ref: "#/components/schemas/GoogleSearchIdeahubV1alphaIdea"
          type: array
        nextPageToken:
          description: Used to fetch the next page in a subsequent request.
          type: string
      type: object
    GoogleSearchIdeahubV1alphaTopic:
      description: Represents a Topic umbrella for a list of questions that a Creator
        may want to respond to.
      properties:
        displayName:
          description: String displayed to the creator indicating the name of the Topic.
          type: string
        mid:
          description: The mID of the topic.
          type: string
      type: object
