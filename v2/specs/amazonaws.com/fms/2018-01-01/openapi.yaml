openapi: 3.0.0
info:
  version: 2018-01-01
  x-release: v4
  title: Firewall Management Service
  description: <fullname>AWS Firewall Manager</fullname> <p>This is the <i>AWS
    Firewall Manager API Reference</i>. This guide is for developers who need
    detailed information about the AWS Firewall Manager API actions, data types,
    and errors. For detailed information about AWS Firewall Manager features,
    see the <a
    href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-chapter.html">AWS
    Firewall Manager Developer Guide</a>.</p> <p>Some API actions require
    explicit resource permissions. For information, see the developer guide
    topic <a
    href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-api-permissions-ref.html">Firewall
    Manager required permissions for API actions</a>. </p>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: fms
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/fms-2018-01-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/fms/
servers:
  - url: http://fms.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The FMS multi-region endpoint
  - url: https://fms.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The FMS multi-region endpoint
  - url: http://fms.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The FMS endpoint for China (Beijing) and China (Ningxia)
  - url: https://fms.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The FMS endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AWSFMS_20180101.AssociateAdminAccount:
    post:
      operationId: AssociateAdminAccount
      description: <p>Sets the AWS Firewall Manager administrator account. AWS
        Firewall Manager must be associated with the master account of your AWS
        organization or associated with a member account that has the
        appropriate permissions. If the account ID that you submit is not an AWS
        Organizations master account, AWS Firewall Manager will set the
        appropriate permissions for the given member account.</p> <p>The account
        that you associate with AWS Firewall Manager is called the AWS Firewall
        Manager administrator account. </p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateAdminAccountRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.AssociateAdminAccount
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.DeleteAppsList:
    post:
      operationId: DeleteAppsList
      description: Permanently deletes an AWS Firewall Manager applications list.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAppsListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.DeleteAppsList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.DeleteNotificationChannel:
    post:
      operationId: DeleteNotificationChannel
      description: Deletes an AWS Firewall Manager association with the IAM role and
        the Amazon Simple Notification Service (SNS) topic that is used to
        record AWS Firewall Manager SNS logs.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteNotificationChannelRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.DeleteNotificationChannel
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.DeletePolicy:
    post:
      operationId: DeletePolicy
      description: "Permanently deletes an AWS Firewall Manager policy. "
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePolicyRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.DeletePolicy
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.DeleteProtocolsList:
    post:
      operationId: DeleteProtocolsList
      description: Permanently deletes an AWS Firewall Manager protocols list.
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteProtocolsListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.DeleteProtocolsList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.DisassociateAdminAccount:
    post:
      operationId: DisassociateAdminAccount
      description: Disassociates the account that has been set as the AWS Firewall
        Manager administrator account. To set a different account as the
        administrator account, you must submit an
        <code>AssociateAdminAccount</code> request.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateAdminAccountRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.DisassociateAdminAccount
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetAdminAccount:
    post:
      operationId: GetAdminAccount
      description: Returns the AWS Organizations master account that is associated
        with AWS Firewall Manager as the AWS Firewall Manager administrator.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAdminAccountResponse"
        "480":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAdminAccountRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetAdminAccount
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetAppsList:
    post:
      operationId: GetAppsList
      description: Returns information about the specified AWS Firewall Manager
        applications list.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAppsListResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAppsListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetAppsList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetComplianceDetail:
    post:
      operationId: GetComplianceDetail
      description: "Returns detailed compliance information about the specified member
        account. Details include resources that are in and out of compliance
        with the specified policy. Resources are considered noncompliant for AWS
        WAF and Shield Advanced policies if the specified policy has not been
        applied to them. Resources are considered noncompliant for security
        group policies if they are in scope of the policy, they violate one or
        more of the policy rules, and remediation is disabled or not possible.
        Resources are considered noncompliant for Network Firewall policies if a
        firewall is missing in the VPC, if the firewall endpoint isn't set up in
        an expected Availability Zone and subnet, if a subnet created by the
        Firewall Manager doesn't have the expected route table, and for
        modifications to a firewall policy that violate the Firewall Manager
        policy's rules. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetComplianceDetailResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetComplianceDetailRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetComplianceDetail
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetNotificationChannel:
    post:
      operationId: GetNotificationChannel
      description: Information about the Amazon Simple Notification Service (SNS)
        topic that is used to record AWS Firewall Manager SNS logs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNotificationChannelResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetNotificationChannelRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetNotificationChannel
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetPolicy:
    post:
      operationId: GetPolicy
      description: Returns information about the specified AWS Firewall Manager policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPolicyResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetPolicyRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetPolicy
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetProtectionStatus:
    post:
      operationId: GetProtectionStatus
      description: If you created a Shield Advanced policy, returns policy-level
        attack summary information in the event of a potential DDoS attack.
        Other policy types are currently unsupported.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProtectionStatusResponse"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetProtectionStatusRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetProtectionStatus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetProtocolsList:
    post:
      operationId: GetProtocolsList
      description: Returns information about the specified AWS Firewall Manager
        protocols list.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProtocolsListResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetProtocolsListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetProtocolsList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.GetViolationDetails:
    post:
      operationId: GetViolationDetails
      description: Retrieves violations for a resource based on the specified AWS
        Firewall Manager policy and AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetViolationDetailsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetViolationDetailsRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.GetViolationDetails
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.ListAppsLists:
    post:
      operationId: ListAppsLists
      description: Returns an array of <code>AppsListDataSummary</code> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAppsListsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAppsListsRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.ListAppsLists
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.ListComplianceStatus:
    post:
      operationId: ListComplianceStatus
      description: "Returns an array of <code>PolicyComplianceStatus</code> objects.
        Use <code>PolicyComplianceStatus</code> to get a summary of which member
        accounts are protected by the specified policy. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComplianceStatusResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListComplianceStatusRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.ListComplianceStatus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.ListMemberAccounts:
    post:
      operationId: ListMemberAccounts
      description: <p>Returns a <code>MemberAccounts</code> object that lists the
        member accounts in the administrator's AWS organization.</p> <p>The
        <code>ListMemberAccounts</code> must be submitted by the account that is
        set as the AWS Firewall Manager administrator.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMemberAccountsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListMemberAccountsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.ListMemberAccounts
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.ListPolicies:
    post:
      operationId: ListPolicies
      description: Returns an array of <code>PolicySummary</code> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPoliciesResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPoliciesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.ListPolicies
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.ListProtocolsLists:
    post:
      operationId: ListProtocolsLists
      description: Returns an array of <code>ProtocolsListDataSummary</code> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProtocolsListsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListProtocolsListsRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.ListProtocolsLists
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: "Retrieves the list of tags for the specified AWS resource. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.ListTagsForResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.PutAppsList:
    post:
      operationId: PutAppsList
      description: Creates an AWS Firewall Manager applications list.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutAppsListResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutAppsListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.PutAppsList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.PutNotificationChannel:
    post:
      operationId: PutNotificationChannel
      description: <p>Designates the IAM role and Amazon Simple Notification Service
        (SNS) topic that AWS Firewall Manager uses to record SNS logs.</p> <p>To
        perform this action outside of the console, you must configure the SNS
        topic to allow the Firewall Manager role
        <code>AWSServiceRoleForFMS</code> to publish SNS logs. For more
        information, see <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/fms-api-permissions-ref.html">Firewall
        Manager required permissions for API actions</a> in the <i>AWS Firewall
        Manager Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutNotificationChannelRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.PutNotificationChannel
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.PutPolicy:
    post:
      operationId: PutPolicy
      description: '<p>Creates an AWS Firewall Manager policy.</p> <p>Firewall Manager
        provides the following types of policies: </p> <ul> <li> <p>An AWS WAF
        policy (type WAFV2), which defines rule groups to run first in the
        corresponding AWS WAF web ACL and rule groups to run last in the web
        ACL.</p> </li> <li> <p>An AWS WAF Classic policy (type WAF), which
        defines a rule group. </p> </li> <li> <p>A Shield Advanced policy, which
        applies Shield Advanced protection to specified accounts and
        resources.</p> </li> <li> <p>A security group policy, which manages VPC
        security groups across your AWS organization. </p> </li> <li> <p>An AWS
        Network Firewall policy, which provides firewall rules to filter network
        traffic in specified Amazon VPCs.</p> </li> </ul> <p>Each policy is
        specific to one of the types. If you want to enforce more than one
        policy type across accounts, create multiple policies. You can create
        multiple policies for each type.</p> <p>You must be subscribed to Shield
        Advanced to create a Shield Advanced policy. For more information about
        subscribing to Shield Advanced, see <a
        href="https://docs.aws.amazon.com/waf/latest/DDOSAPIReference/API_CreateSubscription.html">CreateSubscription</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutPolicyResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "485":
          description: InvalidTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutPolicyRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.PutPolicy
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.PutProtocolsList:
    post:
      operationId: PutProtocolsList
      description: Creates an AWS Firewall Manager protocols list.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutProtocolsListResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutProtocolsListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.PutProtocolsList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.TagResource:
    post:
      operationId: TagResource
      description: Adds one or more tags to an AWS resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.TagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSFMS_20180101.UntagResource:
    post:
      operationId: UntagResource
      description: Removes one or more tags from an AWS resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
        "482":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSFMS_20180101.UntagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateAdminAccountRequest:
      type: object
      required:
        - AdminAccount
      title: AssociateAdminAccountRequest
      properties:
        AdminAccount:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: 'The AWS account ID to associate with AWS Firewall Manager as the
                AWS Firewall Manager administrator account. This can be an AWS
                Organizations master account or a member account. For more
                information about AWS Organizations and master accounts, see <a
                href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts.html">Managing
                the AWS Accounts in Your Organization</a>. '
    InvalidOperationException: {}
    InvalidInputException: {}
    ResourceNotFoundException: {}
    InternalErrorException: {}
    DeleteAppsListRequest:
      type: object
      required:
        - ListId
      title: DeleteAppsListRequest
      properties:
        ListId:
          allOf:
            - $ref: "#/components/schemas/ListId"
            - description: The ID of the applications list that you want to delete. You can
                retrieve this ID from <code>PutAppsList</code>,
                <code>ListAppsLists</code>, and <code>GetAppsList</code>.
    DeleteNotificationChannelRequest:
      type: object
      title: DeleteNotificationChannelRequest
      properties: {}
    DeletePolicyRequest:
      type: object
      required:
        - PolicyId
      title: DeletePolicyRequest
      properties:
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the policy that you want to delete. You can retrieve this
                ID from <code>PutPolicy</code> and <code>ListPolicies</code>.
        DeleteAllPolicyResources:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>If <code>True</code>, the request performs cleanup according to
                the policy type. </p> <p>For AWS WAF and Shield Advanced
                policies, the cleanup does the following:</p> <ul> <li>
                <p>Deletes rule groups created by AWS Firewall Manager</p> </li>
                <li> <p>Removes web ACLs from in-scope resources</p> </li> <li>
                <p>Deletes web ACLs that contain no rules or rule groups</p>
                </li> </ul> <p>For security group policies, the cleanup does the
                following for each security group in the policy:</p> <ul> <li>
                <p>Disassociates the security group from in-scope resources </p>
                </li> <li> <p>Deletes the security group if it was created
                through Firewall Manager and if it's no longer associated with
                any resources through another policy</p> </li> </ul> <p>After
                the cleanup, in-scope resources are no longer protected by web
                ACLs in this policy. Protection of out-of-scope resources
                remains unchanged. Scope is determined by tags that you create
                and accounts that you associate with the policy. When creating
                the policy, if you specify that only resources in specific
                accounts or with specific tags are in scope of the policy, those
                accounts and resources are handled by the policy. All others are
                out of scope. If you don't specify tags or accounts, all
                resources are in scope. </p>
    LimitExceededException: {}
    DeleteProtocolsListRequest:
      type: object
      required:
        - ListId
      title: DeleteProtocolsListRequest
      properties:
        ListId:
          allOf:
            - $ref: "#/components/schemas/ListId"
            - description: The ID of the protocols list that you want to delete. You can
                retrieve this ID from <code>PutProtocolsList</code>,
                <code>ListProtocolsLists</code>, and
                <code>GetProtocolsLost</code>.
    DisassociateAdminAccountRequest:
      type: object
      title: DisassociateAdminAccountRequest
      properties: {}
    GetAdminAccountResponse:
      type: object
      properties:
        AdminAccount:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The AWS account that is set as the AWS Firewall Manager
                administrator.
        RoleStatus:
          allOf:
            - $ref: "#/components/schemas/AccountRoleStatus"
            - description: The status of the AWS account that you set as the AWS Firewall
                Manager administrator.
    GetAdminAccountRequest:
      type: object
      title: GetAdminAccountRequest
      properties: {}
    GetAppsListResponse:
      type: object
      properties:
        AppsList:
          allOf:
            - $ref: "#/components/schemas/AppsListData"
            - description: Information about the specified AWS Firewall Manager applications
                list.
        AppsListArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the applications list.
    GetAppsListRequest:
      type: object
      required:
        - ListId
      title: GetAppsListRequest
      properties:
        ListId:
          allOf:
            - $ref: "#/components/schemas/ListId"
            - description: The ID of the AWS Firewall Manager applications list that you want
                the details for.
        DefaultList:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether the list to retrieve is a default list owned by
                AWS Firewall Manager.
    GetComplianceDetailResponse:
      type: object
      properties:
        PolicyComplianceDetail:
          allOf:
            - $ref: "#/components/schemas/PolicyComplianceDetail"
            - description: Information about the resources and the policy that you specified
                in the <code>GetComplianceDetail</code> request.
    GetComplianceDetailRequest:
      type: object
      required:
        - PolicyId
        - MemberAccount
      title: GetComplianceDetailRequest
      properties:
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the policy that you want to get the details for.
                <code>PolicyId</code> is returned by <code>PutPolicy</code> and
                by <code>ListPolicies</code>.
        MemberAccount:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The AWS account that owns the resources that you want to get the
                details for.
    GetNotificationChannelResponse:
      type: object
      properties:
        SnsTopicArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: "The SNS topic that records AWS Firewall Manager activity. "
        SnsRoleName:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The IAM role that is used by AWS Firewall Manager to record
                activity to SNS.
    GetNotificationChannelRequest:
      type: object
      title: GetNotificationChannelRequest
      properties: {}
    GetPolicyResponse:
      type: object
      properties:
        Policy:
          allOf:
            - $ref: "#/components/schemas/Policy"
            - description: Information about the specified AWS Firewall Manager policy.
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the specified policy.
    GetPolicyRequest:
      type: object
      required:
        - PolicyId
      title: GetPolicyRequest
      properties:
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the AWS Firewall Manager policy that you want the details
                for.
    InvalidTypeException: {}
    GetProtectionStatusResponse:
      type: object
      properties:
        AdminAccountId:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The ID of the AWS Firewall administrator account for this policy.
        ServiceType:
          allOf:
            - $ref: "#/components/schemas/SecurityServiceType"
            - description: The service type that is protected by the policy. Currently, this
                is always <code>SHIELD_ADVANCED</code>.
        Data:
          allOf:
            - $ref: "#/components/schemas/ProtectionData"
            - description: <p>Details about the attack, including the following:</p> <ul> <li>
                <p>Attack type</p> </li> <li> <p>Account ID</p> </li> <li>
                <p>ARN of the resource attacked</p> </li> <li> <p>Start time of
                the attack</p> </li> <li> <p>End time of the attack (ongoing
                attacks will not have an end time)</p> </li> </ul> <p>The
                details are in JSON format. </p>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: <p>If you have more objects than the number that you specified for
                <code>MaxResults</code> in the request, the response includes a
                <code>NextToken</code> value. To list more objects, submit
                another <code>GetProtectionStatus</code> request, and specify
                the <code>NextToken</code> value from the response in the
                <code>NextToken</code> value in the next request.</p> <p>AWS
                SDKs provide auto-pagination that identify
                <code>NextToken</code> in a response and make subsequent request
                calls automatically on your behalf. However, this feature is not
                supported by <code>GetProtectionStatus</code>. You must submit
                subsequent requests with <code>NextToken</code> using your own
                processes. </p>
    GetProtectionStatusRequest:
      type: object
      required:
        - PolicyId
      title: GetProtectionStatusRequest
      properties:
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the policy for which you want to get the attack
                information.
        MemberAccountId:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The AWS account that is in scope of the policy that you want to get
                the details for.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/TimeStamp"
            - description: The start of the time period to query for the attacks. This is a
                <code>timestamp</code> type. The request syntax listing
                indicates a <code>number</code> type because the default used by
                AWS Firewall Manager is Unix time in seconds. However, any valid
                <code>timestamp</code> format is allowed.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/TimeStamp"
            - description: The end of the time period to query for the attacks. This is a
                <code>timestamp</code> type. The request syntax listing
                indicates a <code>number</code> type because the default used by
                AWS Firewall Manager is Unix time in seconds. However, any valid
                <code>timestamp</code> format is allowed.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you specify a value for <code>MaxResults</code> and you have
                more objects than the number that you specify for
                <code>MaxResults</code>, AWS Firewall Manager returns a
                <code>NextToken</code> value in the response, which you can use
                to retrieve another group of objects. For the second and
                subsequent <code>GetProtectionStatus</code> requests, specify
                the value of <code>NextToken</code> from the previous response
                to get information about another batch of objects.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/PaginationMaxResults"
            - description: Specifies the number of objects that you want AWS Firewall Manager
                to return for this request. If you have more objects than the
                number that you specify for <code>MaxResults</code>, the
                response includes a <code>NextToken</code> value that you can
                use to get another batch of objects.
    GetProtocolsListResponse:
      type: object
      properties:
        ProtocolsList:
          allOf:
            - $ref: "#/components/schemas/ProtocolsListData"
            - description: Information about the specified AWS Firewall Manager protocols
                list.
        ProtocolsListArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the specified protocols list.
    GetProtocolsListRequest:
      type: object
      required:
        - ListId
      title: GetProtocolsListRequest
      properties:
        ListId:
          allOf:
            - $ref: "#/components/schemas/ListId"
            - description: The ID of the AWS Firewall Manager protocols list that you want the
                details for.
        DefaultList:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether the list to retrieve is a default list owned by
                AWS Firewall Manager.
    GetViolationDetailsResponse:
      type: object
      properties:
        ViolationDetail:
          allOf:
            - $ref: "#/components/schemas/ViolationDetail"
            - description: Violation detail for a resource.
    GetViolationDetailsRequest:
      type: object
      required:
        - PolicyId
        - MemberAccount
        - ResourceId
        - ResourceType
      title: GetViolationDetailsRequest
      properties:
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the AWS Firewall Manager policy that you want the details
                for. This currently only supports security group content audit
                policies.
        MemberAccount:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The AWS account ID that you want the details for.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the resource that has violations.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - description: 'The resource type. This is in the format shown in the <a
                href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS
                Resource Types Reference</a>. Supported resource types are:
                <code>AWS::EC2::Instance</code>,
                <code>AWS::EC2::NetworkInterface</code>,
                <code>AWS::EC2::SecurityGroup</code>,
                <code>AWS::NetworkFirewall::FirewallPolicy</code>, and
                <code>AWS::EC2::Subnet</code>. '
    ListAppsListsResponse:
      type: object
      properties:
        AppsLists:
          allOf:
            - $ref: "#/components/schemas/AppsListsData"
            - description: An array of <code>AppsListDataSummary</code> objects.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you specify a value for <code>MaxResults</code> in your list
                request, and you have more objects than the maximum, AWS
                Firewall Manager returns this token in the response. You can use
                this token in subsequent requests to retrieve the next batch of
                objects.
    ListAppsListsRequest:
      type: object
      required:
        - MaxResults
      title: ListAppsListsRequest
      properties:
        DefaultLists:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether the lists to retrieve are default lists owned by
                AWS Firewall Manager.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you specify a value for <code>MaxResults</code> in your list
                request, and you have more objects than the maximum, AWS
                Firewall Manager returns this token in the response. For all but
                the first request, you provide the token returned by the prior
                request in the request parameters, to retrieve the next batch of
                objects.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/PaginationMaxResults"
            - description: <p>The maximum number of objects that you want AWS Firewall Manager
                to return for this request. If more objects are available, in
                the response, AWS Firewall Manager provides a
                <code>NextToken</code> value that you can use in a subsequent
                call to get the next batch of objects.</p> <p>If you don't
                specify this, AWS Firewall Manager returns all available
                objects.</p>
    ListComplianceStatusResponse:
      type: object
      properties:
        PolicyComplianceStatusList:
          allOf:
            - $ref: "#/components/schemas/PolicyComplianceStatusList"
            - description: An array of <code>PolicyComplianceStatus</code> objects.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you have more <code>PolicyComplianceStatus</code> objects than
                the number that you specified for <code>MaxResults</code> in the
                request, the response includes a <code>NextToken</code> value.
                To list more <code>PolicyComplianceStatus</code> objects, submit
                another <code>ListComplianceStatus</code> request, and specify
                the <code>NextToken</code> value from the response in the
                <code>NextToken</code> value in the next request.
    ListComplianceStatusRequest:
      type: object
      required:
        - PolicyId
      title: ListComplianceStatusRequest
      properties:
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the AWS Firewall Manager policy that you want the details
                for.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you specify a value for <code>MaxResults</code> and you have
                more <code>PolicyComplianceStatus</code> objects than the number
                that you specify for <code>MaxResults</code>, AWS Firewall
                Manager returns a <code>NextToken</code> value in the response
                that allows you to list another group of
                <code>PolicyComplianceStatus</code> objects. For the second and
                subsequent <code>ListComplianceStatus</code> requests, specify
                the value of <code>NextToken</code> from the previous response
                to get information about another batch of
                <code>PolicyComplianceStatus</code> objects.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/PaginationMaxResults"
            - description: Specifies the number of <code>PolicyComplianceStatus</code> objects
                that you want AWS Firewall Manager to return for this request.
                If you have more <code>PolicyComplianceStatus</code> objects
                than the number that you specify for <code>MaxResults</code>,
                the response includes a <code>NextToken</code> value that you
                can use to get another batch of
                <code>PolicyComplianceStatus</code> objects.
    ListMemberAccountsResponse:
      type: object
      properties:
        MemberAccounts:
          allOf:
            - $ref: "#/components/schemas/MemberAccounts"
            - description: An array of account IDs.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you have more member account IDs than the number that you
                specified for <code>MaxResults</code> in the request, the
                response includes a <code>NextToken</code> value. To list more
                IDs, submit another <code>ListMemberAccounts</code> request, and
                specify the <code>NextToken</code> value from the response in
                the <code>NextToken</code> value in the next request.
    ListMemberAccountsRequest:
      type: object
      title: ListMemberAccountsRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you specify a value for <code>MaxResults</code> and you have
                more account IDs than the number that you specify for
                <code>MaxResults</code>, AWS Firewall Manager returns a
                <code>NextToken</code> value in the response that allows you to
                list another group of IDs. For the second and subsequent
                <code>ListMemberAccountsRequest</code> requests, specify the
                value of <code>NextToken</code> from the previous response to
                get information about another batch of member account IDs.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/PaginationMaxResults"
            - description: Specifies the number of member account IDs that you want AWS
                Firewall Manager to return for this request. If you have more
                IDs than the number that you specify for
                <code>MaxResults</code>, the response includes a
                <code>NextToken</code> value that you can use to get another
                batch of member account IDs.
    ListPoliciesResponse:
      type: object
      properties:
        PolicyList:
          allOf:
            - $ref: "#/components/schemas/PolicySummaryList"
            - description: An array of <code>PolicySummary</code> objects.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you have more <code>PolicySummary</code> objects than the number
                that you specified for <code>MaxResults</code> in the request,
                the response includes a <code>NextToken</code> value. To list
                more <code>PolicySummary</code> objects, submit another
                <code>ListPolicies</code> request, and specify the
                <code>NextToken</code> value from the response in the
                <code>NextToken</code> value in the next request.
    ListPoliciesRequest:
      type: object
      title: ListPoliciesRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you specify a value for <code>MaxResults</code> and you have
                more <code>PolicySummary</code> objects than the number that you
                specify for <code>MaxResults</code>, AWS Firewall Manager
                returns a <code>NextToken</code> value in the response that
                allows you to list another group of <code>PolicySummary</code>
                objects. For the second and subsequent <code>ListPolicies</code>
                requests, specify the value of <code>NextToken</code> from the
                previous response to get information about another batch of
                <code>PolicySummary</code> objects.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/PaginationMaxResults"
            - description: Specifies the number of <code>PolicySummary</code> objects that you
                want AWS Firewall Manager to return for this request. If you
                have more <code>PolicySummary</code> objects than the number
                that you specify for <code>MaxResults</code>, the response
                includes a <code>NextToken</code> value that you can use to get
                another batch of <code>PolicySummary</code> objects.
    ListProtocolsListsResponse:
      type: object
      properties:
        ProtocolsLists:
          allOf:
            - $ref: "#/components/schemas/ProtocolsListsData"
            - description: An array of <code>ProtocolsListDataSummary</code> objects.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you specify a value for <code>MaxResults</code> in your list
                request, and you have more objects than the maximum, AWS
                Firewall Manager returns this token in the response. You can use
                this token in subsequent requests to retrieve the next batch of
                objects.
    ListProtocolsListsRequest:
      type: object
      required:
        - MaxResults
      title: ListProtocolsListsRequest
      properties:
        DefaultLists:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether the lists to retrieve are default lists owned by
                AWS Firewall Manager.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/PaginationToken"
            - description: If you specify a value for <code>MaxResults</code> in your list
                request, and you have more objects than the maximum, AWS
                Firewall Manager returns this token in the response. For all but
                the first request, you provide the token returned by the prior
                request in the request parameters, to retrieve the next batch of
                objects.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/PaginationMaxResults"
            - description: <p>The maximum number of objects that you want AWS Firewall Manager
                to return for this request. If more objects are available, in
                the response, AWS Firewall Manager provides a
                <code>NextToken</code> value that you can use in a subsequent
                call to get the next batch of objects.</p> <p>If you don't
                specify this, AWS Firewall Manager returns all available
                objects.</p>
    ListTagsForResourceResponse:
      type: object
      properties:
        TagList:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags associated with the resource.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      title: ListTagsForResourceRequest
      properties:
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: "The Amazon Resource Name (ARN) of the resource to return tags for.
                The AWS Firewall Manager resources that support tagging are
                policies, applications lists, and protocols lists. "
    PutAppsListResponse:
      type: object
      properties:
        AppsList:
          allOf:
            - $ref: "#/components/schemas/AppsListData"
            - description: The details of the AWS Firewall Manager applications list.
        AppsListArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the applications list.
    PutAppsListRequest:
      type: object
      required:
        - AppsList
      title: PutAppsListRequest
      properties:
        AppsList:
          allOf:
            - $ref: "#/components/schemas/AppsListData"
            - description: The details of the AWS Firewall Manager applications list to be
                created.
        TagList:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags associated with the resource.
    PutNotificationChannelRequest:
      type: object
      required:
        - SnsTopicArn
        - SnsRoleName
      title: PutNotificationChannelRequest
      properties:
        SnsTopicArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the SNS topic that collects
                notifications from AWS Firewall Manager.
        SnsRoleName:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: "The Amazon Resource Name (ARN) of the IAM role that allows Amazon
                SNS to record AWS Firewall Manager activity. "
    PutPolicyResponse:
      type: object
      properties:
        Policy:
          allOf:
            - $ref: "#/components/schemas/Policy"
            - description: The details of the AWS Firewall Manager policy.
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the policy.
    PutPolicyRequest:
      type: object
      required:
        - Policy
      title: PutPolicyRequest
      properties:
        Policy:
          allOf:
            - $ref: "#/components/schemas/Policy"
            - description: The details of the AWS Firewall Manager policy to be created.
        TagList:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to add to the AWS resource.
    PutProtocolsListResponse:
      type: object
      properties:
        ProtocolsList:
          allOf:
            - $ref: "#/components/schemas/ProtocolsListData"
            - description: The details of the AWS Firewall Manager protocols list.
        ProtocolsListArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the protocols list.
    PutProtocolsListRequest:
      type: object
      required:
        - ProtocolsList
      title: PutProtocolsListRequest
      properties:
        ProtocolsList:
          allOf:
            - $ref: "#/components/schemas/ProtocolsListData"
            - description: The details of the AWS Firewall Manager protocols list to be
                created.
        TagList:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags associated with the resource.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagList
      title: TagResourceRequest
      properties:
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: "The Amazon Resource Name (ARN) of the resource to return tags for.
                The AWS Firewall Manager resources that support tagging are
                policies, applications lists, and protocols lists. "
        TagList:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to add to the resource.
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: "The Amazon Resource Name (ARN) of the resource to return tags for.
                The AWS Firewall Manager resources that support tagging are
                policies, applications lists, and protocols lists. "
        TagKeys:
          allOf:
            - $ref: "#/components/schemas/TagKeyList"
            - description: "The keys of the tags to remove from the resource. "
    AWSAccountId:
      type: string
      pattern: ^[0-9]+$
      minLength: 1
      maxLength: 1024
    AccountRoleStatus:
      type: string
      enum:
        - READY
        - CREATING
        - PENDING_DELETION
        - DELETING
        - DELETED
    ResourceName:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    Protocol:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 20
    IPPortNumber:
      type: integer
      minimum: 0
      maximum: 65535
    App:
      type: object
      required:
        - AppName
        - Protocol
        - Port
      properties:
        AppName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The application's name.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/Protocol"
            - description: The IP protocol name or number. The name can be one of
                <code>tcp</code>, <code>udp</code>, or <code>icmp</code>. For
                information on possible numbers, see <a
                href="https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol
                Numbers</a>.
        Port:
          allOf:
            - $ref: "#/components/schemas/IPPortNumber"
            - description: The application's port number, for example <code>80</code>.
      description: An individual AWS Firewall Manager application.
    AppsList:
      type: array
      items:
        $ref: "#/components/schemas/App"
    ListId:
      type: string
      pattern: ^[a-z0-9A-Z-]{36}$
      minLength: 36
      maxLength: 36
    UpdateToken:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    TimeStamp:
      type: string
      format: date-time
    PreviousAppsList:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AppsList"
    AppsListData:
      type: object
      required:
        - ListName
        - AppsList
      properties:
        ListId:
          allOf:
            - $ref: "#/components/schemas/ListId"
            - description: The ID of the AWS Firewall Manager applications list.
        ListName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the AWS Firewall Manager applications list.
        ListUpdateToken:
          allOf:
            - $ref: "#/components/schemas/UpdateToken"
            - description: "A unique identifier for each update to the list. When you update
                the list, the update token must match the token of the current
                version of the application list. You can retrieve the update
                token by getting the list. "
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/TimeStamp"
            - description: The time that the AWS Firewall Manager applications list was
                created.
        LastUpdateTime:
          allOf:
            - $ref: "#/components/schemas/TimeStamp"
            - description: The time that the AWS Firewall Manager applications list was last
                updated.
        AppsList:
          allOf:
            - $ref: "#/components/schemas/AppsList"
            - description: An array of applications in the AWS Firewall Manager applications
                list.
        PreviousAppsList:
          allOf:
            - $ref: "#/components/schemas/PreviousAppsList"
            - description: A map of previous version numbers to their corresponding
                <code>App</code> object arrays.
      description: An AWS Firewall Manager applications list.
    ResourceArn:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    AppsListDataSummary:
      type: object
      properties:
        ListArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the applications list.
        ListId:
          allOf:
            - $ref: "#/components/schemas/ListId"
            - description: The ID of the applications list.
        ListName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the applications list.
        AppsList:
          allOf:
            - $ref: "#/components/schemas/AppsList"
            - description: An array of <code>App</code> objects in the AWS Firewall Manager
                applications list.
      description: Details of the AWS Firewall Manager applications list.
    AppsListsData:
      type: array
      items:
        $ref: "#/components/schemas/AppsListDataSummary"
    ViolationTarget:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    AwsEc2NetworkInterfaceViolations:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2NetworkInterfaceViolation"
    AwsEc2InstanceViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: The resource ID of the EC2 instance.
        AwsEc2NetworkInterfaceViolations:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkInterfaceViolations"
            - description: Violations for network interfaces associated with the EC2 instance.
      description: Violations for an EC2 instance resource.
    ResourceIdList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceId"
    AwsEc2NetworkInterfaceViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: The resource ID of the network interface.
        ViolatingSecurityGroups:
          allOf:
            - $ref: "#/components/schemas/ResourceIdList"
            - description: List of security groups that violate the rules specified in the
                master security group of the AWS Firewall Manager policy.
      description: Violations for network interfaces associated with an EC2 instance.
    LengthBoundedString:
      type: string
      minLength: 0
      maxLength: 1024
    PartialMatches:
      type: array
      items:
        $ref: "#/components/schemas/PartialMatch"
    SecurityGroupRemediationActions:
      type: array
      items:
        $ref: "#/components/schemas/SecurityGroupRemediationAction"
    AwsVPCSecurityGroupViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: The security group rule that is being evaluated.
        ViolationTargetDescription:
          allOf:
            - $ref: "#/components/schemas/LengthBoundedString"
            - description: A description of the security group that violates the policy.
        PartialMatches:
          allOf:
            - $ref: "#/components/schemas/PartialMatches"
            - description: List of rules specified in the security group of the AWS Firewall
                Manager policy that partially match the
                <code>ViolationTarget</code> rule.
        PossibleSecurityGroupRemediationActions:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRemediationActions"
            - description: Remediation options for the rule specified in the
                <code>ViolationTarget</code>.
      description: Details of the rule violation in a security group when compared to
        the master security group of the AWS Firewall Manager policy.
    BasicInteger:
      type: integer
      minimum: -2147483648
      maximum: 2147483647
    Boolean:
      type: boolean
    CIDR:
      type: string
      pattern: "[a-f0-9:./]+"
      minLength: 0
      maxLength: 256
    ResourceId:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    ViolationReason:
      type: string
      enum:
        - WEB_ACL_MISSING_RULE_GROUP
        - RESOURCE_MISSING_WEB_ACL
        - RESOURCE_INCORRECT_WEB_ACL
        - RESOURCE_MISSING_SHIELD_PROTECTION
        - RESOURCE_MISSING_WEB_ACL_OR_SHIELD_PROTECTION
        - RESOURCE_MISSING_SECURITY_GROUP
        - RESOURCE_VIOLATES_AUDIT_SECURITY_GROUP
        - SECURITY_GROUP_UNUSED
        - SECURITY_GROUP_REDUNDANT
        - FMS_CREATED_SECURITY_GROUP_EDITED
        - MISSING_FIREWALL
        - MISSING_FIREWALL_SUBNET_IN_AZ
        - MISSING_EXPECTED_ROUTE_TABLE
        - NETWORK_FIREWALL_POLICY_MODIFIED
        - RESOURCE_MISSING_DNS_FIREWALL
    ResourceType:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    ComplianceViolator:
      type: object
      properties:
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The resource ID.
        ViolationReason:
          allOf:
            - $ref: "#/components/schemas/ViolationReason"
            - description: The reason that the resource is not protected by the policy.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - description: 'The resource type. This is in the format shown in the <a
                href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS
                Resource Types Reference</a>. For example:
                <code>AWS::ElasticLoadBalancingV2::LoadBalancer</code>,
                <code>AWS::CloudFront::Distribution</code>, or
                <code>AWS::NetworkFirewall::FirewallPolicy</code>.'
      description: Details of the resource that is not protected by the policy.
    ComplianceViolators:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceViolator"
    CustomerPolicyScopeId:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    CustomerPolicyScopeIdList:
      type: array
      items:
        $ref: "#/components/schemas/CustomerPolicyScopeId"
    CustomerPolicyScopeIdType:
      type: string
      enum:
        - ACCOUNT
        - ORG_UNIT
    CustomerPolicyScopeMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/CustomerPolicyScopeIdList"
    PolicyId:
      type: string
      pattern: ^[a-z0-9A-Z-]{36}$
      minLength: 36
      maxLength: 36
    DependentServiceName:
      type: string
      enum:
        - AWSCONFIG
        - AWSWAF
        - AWSSHIELD_ADVANCED
        - AWSVPC
    DetailedInfo:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=,+\-@]*)$
      minLength: 1
      maxLength: 1024
    DnsDuplicateRuleGroupViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: "The ID of the VPC. "
        ViolationTargetDescription:
          allOf:
            - $ref: "#/components/schemas/LengthBoundedString"
            - description: A description of the violation that specifies the rule group and
                VPC.
      description: "A DNS Firewall rule group that Firewall Manager tried to associate
        with a VPC is already associated with the VPC and can't be associated
        again. "
    DnsRuleGroupLimitExceededViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: "The ID of the VPC. "
        ViolationTargetDescription:
          allOf:
            - $ref: "#/components/schemas/LengthBoundedString"
            - description: A description of the violation that specifies the rule group and
                VPC.
        NumberOfRuleGroupsAlreadyAssociated:
          allOf:
            - $ref: "#/components/schemas/BasicInteger"
            - description: "The number of rule groups currently associated with the VPC. "
      description: "The VPC that Firewall Manager was applying a DNS Fireall policy to
        reached the limit for associated DNS Firewall rule groups. Firewall
        Manager tried to associate another rule group with the VPC and failed
        due to the limit. "
    DnsRuleGroupPriority:
      type: integer
      minimum: 0
      maximum: 10000
    DnsRuleGroupPriorities:
      type: array
      items:
        $ref: "#/components/schemas/DnsRuleGroupPriority"
    DnsRuleGroupPriorityConflictViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: "The ID of the VPC. "
        ViolationTargetDescription:
          allOf:
            - $ref: "#/components/schemas/LengthBoundedString"
            - description: A description of the violation that specifies the VPC and the rule
                group that's already associated with it.
        ConflictingPriority:
          allOf:
            - $ref: "#/components/schemas/DnsRuleGroupPriority"
            - description: The priority setting of the two conflicting rule groups.
        ConflictingPolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: "The ID of the Firewall Manager DNS Firewall policy that was
                already applied to the VPC. This policy contains the rule group
                that's already associated with the VPC. "
        UnavailablePriorities:
          allOf:
            - $ref: "#/components/schemas/DnsRuleGroupPriorities"
            - description: "The priorities of rule groups that are already associated with the
                VPC. To retry your operation, choose priority settings that
                aren't in this list for the rule groups in your new DNS Firewall
                policy. "
      description: "A rule group that Firewall Manager tried to associate with a VPC
        has the same priority as a rule group that's already associated. "
    PolicyComplianceStatusType:
      type: string
      enum:
        - COMPLIANT
        - NON_COMPLIANT
    ResourceCount:
      type: integer
      minimum: 0
    EvaluationResult:
      type: object
      properties:
        ComplianceStatus:
          allOf:
            - $ref: "#/components/schemas/PolicyComplianceStatusType"
            - description: Describes an AWS account's compliance with the AWS Firewall Manager
                policy.
        ViolatorCount:
          allOf:
            - $ref: "#/components/schemas/ResourceCount"
            - description: The number of resources that are noncompliant with the specified
                policy. For AWS WAF and Shield Advanced policies, a resource is
                considered noncompliant if it is not associated with the policy.
                For security group policies, a resource is considered
                noncompliant if it doesn't comply with the rules of the policy
                and remediation is disabled or not possible.
        EvaluationLimitExceeded:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates that over 100 resources are noncompliant with the AWS
                Firewall Manager policy.
      description: Describes the compliance status for the account. An account is
        considered noncompliant if it includes resources that are not protected
        by the specified policy or that don't comply with the policy.
    EvaluationResults:
      type: array
      items:
        $ref: "#/components/schemas/EvaluationResult"
    PolicyComplianceDetail:
      type: object
      properties:
        PolicyOwner:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The AWS account that created the AWS Firewall Manager policy.
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the AWS Firewall Manager policy.
        MemberAccount:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The AWS account ID.
        Violators:
          allOf:
            - $ref: "#/components/schemas/ComplianceViolators"
            - description: An array of resources that aren't protected by the AWS WAF or
                Shield Advanced policy or that aren't in compliance with the
                security group policy.
        EvaluationLimitExceeded:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates if over 100 resources are noncompliant with the AWS
                Firewall Manager policy.
        ExpiredAt:
          allOf:
            - $ref: "#/components/schemas/TimeStamp"
            - description: A timestamp that indicates when the returned information should be
                considered out of date.
        IssueInfoMap:
          allOf:
            - $ref: "#/components/schemas/IssueInfoMap"
            - description: Details about problems with dependent services, such as AWS WAF or
                AWS Config, that are causing a resource to be noncompliant. The
                details include the name of the dependent service and the error
                message received that indicates the problem with the service.
      description: Describes the noncompliant resources in a member account for a
        specific AWS Firewall Manager policy. A maximum of 100 entries are
        displayed. If more than 100 resources are noncompliant,
        <code>EvaluationLimitExceeded</code> is set to <code>True</code>.
    Policy:
      type: object
      required:
        - PolicyName
        - SecurityServicePolicyData
        - ResourceType
        - ExcludeResourceTags
        - RemediationEnabled
      properties:
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the AWS Firewall Manager policy.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the AWS Firewall Manager policy.
        PolicyUpdateToken:
          allOf:
            - $ref: "#/components/schemas/PolicyUpdateToken"
            - description: A unique identifier for each update to the policy. When issuing a
                <code>PutPolicy</code> request, the
                <code>PolicyUpdateToken</code> in the request must match the
                <code>PolicyUpdateToken</code> of the current policy version. To
                get the <code>PolicyUpdateToken</code> of the current policy
                version, use a <code>GetPolicy</code> request.
        SecurityServicePolicyData:
          allOf:
            - $ref: "#/components/schemas/SecurityServicePolicyData"
            - description: Details about the security service that is being used to protect
                the resources.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - description: The type of resource protected by or in scope of the policy. This
                is in the format shown in the <a
                href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS
                Resource Types Reference</a>. For AWS WAF and Shield Advanced,
                examples include
                <code>AWS::ElasticLoadBalancingV2::LoadBalancer</code> and
                <code>AWS::CloudFront::Distribution</code>. For a security group
                common policy, valid values are
                <code>AWS::EC2::NetworkInterface</code> and
                <code>AWS::EC2::Instance</code>. For a security group content
                audit policy, valid values are
                <code>AWS::EC2::SecurityGroup</code>,
                <code>AWS::EC2::NetworkInterface</code>, and
                <code>AWS::EC2::Instance</code>. For a security group usage
                audit policy, the value is <code>AWS::EC2::SecurityGroup</code>.
                For an AWS Network Firewall policy, the value is
                <code>AWS::EC2::VPC</code>.
        ResourceTypeList:
          allOf:
            - $ref: "#/components/schemas/ResourceTypeList"
            - description: An array of <code>ResourceType</code>.
        ResourceTags:
          allOf:
            - $ref: "#/components/schemas/ResourceTags"
            - description: An array of <code>ResourceTag</code> objects.
        ExcludeResourceTags:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: If set to <code>True</code>, resources with the tags that are
                specified in the <code>ResourceTag</code> array are not in scope
                of the policy. If set to <code>False</code>, and the
                <code>ResourceTag</code> array is not null, only resources with
                the specified tags are in scope of the policy.
        RemediationEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates if the policy should be automatically applied to new
                resources.
        IncludeMap:
          allOf:
            - $ref: "#/components/schemas/CustomerPolicyScopeMap"
            - description: "<p>Specifies the AWS account IDs and AWS Organizations
                organizational units (OUs) to include in the policy. Specifying
                an OU is the equivalent of specifying all accounts in the OU and
                in any of its child OUs, including any child OUs and accounts
                that are added at a later time.</p> <p>You can specify
                inclusions or exclusions, but not both. If you specify an
                <code>IncludeMap</code>, AWS Firewall Manager applies the policy
                to all accounts specified by the <code>IncludeMap</code>, and
                does not evaluate any <code>ExcludeMap</code> specifications. If
                you do not specify an <code>IncludeMap</code>, then Firewall
                Manager applies the policy to all accounts except for those
                specified by the <code>ExcludeMap</code>.</p> <p>You can specify
                account IDs, OUs, or a combination: </p> <ul> <li> <p>Specify
                account IDs by setting the key to <code>ACCOUNT</code>. For
                example, the following is a valid map: <code>{“ACCOUNT” :
                [“accountID1”, “accountID2”]}</code>.</p> </li> <li> <p>Specify
                OUs by setting the key to <code>ORG_UNIT</code>. For example,
                the following is a valid map: <code>{“ORG_UNIT” : [“ouid111”,
                “ouid112”]}</code>.</p> </li> <li> <p>Specify accounts and OUs
                together in a single map, separated with a comma. For example,
                the following is a valid map: <code>{“ACCOUNT” : [“accountID1”,
                “accountID2”], “ORG_UNIT” : [“ouid111”, “ouid112”]}</code>.</p>
                </li> </ul>"
        ExcludeMap:
          allOf:
            - $ref: "#/components/schemas/CustomerPolicyScopeMap"
            - description: "<p>Specifies the AWS account IDs and AWS Organizations
                organizational units (OUs) to exclude from the policy.
                Specifying an OU is the equivalent of specifying all accounts in
                the OU and in any of its child OUs, including any child OUs and
                accounts that are added at a later time.</p> <p>You can specify
                inclusions or exclusions, but not both. If you specify an
                <code>IncludeMap</code>, AWS Firewall Manager applies the policy
                to all accounts specified by the <code>IncludeMap</code>, and
                does not evaluate any <code>ExcludeMap</code> specifications. If
                you do not specify an <code>IncludeMap</code>, then Firewall
                Manager applies the policy to all accounts except for those
                specified by the <code>ExcludeMap</code>.</p> <p>You can specify
                account IDs, OUs, or a combination: </p> <ul> <li> <p>Specify
                account IDs by setting the key to <code>ACCOUNT</code>. For
                example, the following is a valid map: <code>{“ACCOUNT” :
                [“accountID1”, “accountID2”]}</code>.</p> </li> <li> <p>Specify
                OUs by setting the key to <code>ORG_UNIT</code>. For example,
                the following is a valid map: <code>{“ORG_UNIT” : [“ouid111”,
                “ouid112”]}</code>.</p> </li> <li> <p>Specify accounts and OUs
                together in a single map, separated with a comma. For example,
                the following is a valid map: <code>{“ACCOUNT” : [“accountID1”,
                “accountID2”], “ORG_UNIT” : [“ouid111”, “ouid112”]}</code>.</p>
                </li> </ul>"
      description: An AWS Firewall Manager policy.
    PaginationToken:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 4096
    PaginationMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    SecurityServiceType:
      type: string
      enum:
        - WAF
        - WAFV2
        - SHIELD_ADVANCED
        - SECURITY_GROUPS_COMMON
        - SECURITY_GROUPS_CONTENT_AUDIT
        - SECURITY_GROUPS_USAGE_AUDIT
        - NETWORK_FIREWALL
        - DNS_FIREWALL
    ProtectionData:
      type: string
    ProtocolsListData:
      type: object
      required:
        - ListName
        - ProtocolsList
      properties:
        ListId:
          allOf:
            - $ref: "#/components/schemas/ListId"
            - description: The ID of the AWS Firewall Manager protocols list.
        ListName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the AWS Firewall Manager protocols list.
        ListUpdateToken:
          allOf:
            - $ref: "#/components/schemas/UpdateToken"
            - description: "A unique identifier for each update to the list. When you update
                the list, the update token must match the token of the current
                version of the application list. You can retrieve the update
                token by getting the list. "
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/TimeStamp"
            - description: The time that the AWS Firewall Manager protocols list was created.
        LastUpdateTime:
          allOf:
            - $ref: "#/components/schemas/TimeStamp"
            - description: The time that the AWS Firewall Manager protocols list was last
                updated.
        ProtocolsList:
          allOf:
            - $ref: "#/components/schemas/ProtocolsList"
            - description: An array of protocols in the AWS Firewall Manager protocols list.
        PreviousProtocolsList:
          allOf:
            - $ref: "#/components/schemas/PreviousProtocolsList"
            - description: A map of previous version numbers to their corresponding protocol
                arrays.
      description: An AWS Firewall Manager protocols list.
    ViolationDetail:
      type: object
      required:
        - PolicyId
        - MemberAccount
        - ResourceId
        - ResourceType
        - ResourceViolations
      properties:
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the AWS Firewall Manager policy that the violation
                details were requested for.
        MemberAccount:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The AWS account that the violation details were requested for.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The resource ID that the violation details were requested for.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - description: The resource type that the violation details were requested for.
        ResourceViolations:
          allOf:
            - $ref: "#/components/schemas/ResourceViolations"
            - description: List of violations for the requested resource.
        ResourceTags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The <code>ResourceTag</code> objects associated with the resource.
        ResourceDescription:
          allOf:
            - $ref: "#/components/schemas/LengthBoundedString"
            - description: Brief description for the requested resource.
      description: Violations for a resource based on the specified AWS Firewall
        Manager policy and AWS account.
    IssueInfoMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/DetailedInfo"
    PolicyComplianceStatusList:
      type: array
      items:
        $ref: "#/components/schemas/PolicyComplianceStatus"
    MemberAccounts:
      type: array
      items:
        $ref: "#/components/schemas/AWSAccountId"
    PolicySummaryList:
      type: array
      items:
        $ref: "#/components/schemas/PolicySummary"
    ProtocolsListsData:
      type: array
      items:
        $ref: "#/components/schemas/ProtocolsListDataSummary"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 200
    ManagedServiceData:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 4096
    NetworkFirewallAction:
      type: string
      pattern: ^[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 128
    NetworkFirewallActionList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkFirewallAction"
    NetworkFirewallMissingExpectedRTViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: The ID of the AWS Network Firewall or VPC resource that's in
                violation.
        VPC:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The resource ID of the VPC associated with a violating subnet.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/LengthBoundedString"
            - description: "The Availability Zone of a violating subnet. "
        CurrentRouteTable:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The resource ID of the current route table that's associated with
                the subnet, if one is available.
        ExpectedRouteTable:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The resource ID of the route table that should be associated with
                the subnet.
      description: Violation details for AWS Network Firewall for a subnet that's not
        associated to the expected Firewall Manager managed route table.
    TargetViolationReason:
      type: string
      pattern: \w+
      minLength: 0
      maxLength: 256
    NetworkFirewallMissingFirewallViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: The ID of the AWS Network Firewall or VPC resource that's in
                violation.
        VPC:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The resource ID of the VPC associated with a violating subnet.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/LengthBoundedString"
            - description: "The Availability Zone of a violating subnet. "
        TargetViolationReason:
          allOf:
            - $ref: "#/components/schemas/TargetViolationReason"
            - description: "The reason the resource has this violation, if one is available. "
      description: "Violation details for AWS Network Firewall for a subnet that
        doesn't have a Firewall Manager managed firewall in its VPC. "
    NetworkFirewallMissingSubnetViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: The ID of the AWS Network Firewall or VPC resource that's in
                violation.
        VPC:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The resource ID of the VPC associated with a violating subnet.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/LengthBoundedString"
            - description: "The Availability Zone of a violating subnet. "
        TargetViolationReason:
          allOf:
            - $ref: "#/components/schemas/TargetViolationReason"
            - description: "The reason the resource has this violation, if one is available. "
      description: Violation details for AWS Network Firewall for an Availability Zone
        that's missing the expected Firewall Manager managed subnet.
    StatelessRuleGroupList:
      type: array
      items:
        $ref: "#/components/schemas/StatelessRuleGroup"
    StatefulRuleGroupList:
      type: array
      items:
        $ref: "#/components/schemas/StatefulRuleGroup"
    NetworkFirewallPolicyDescription:
      type: object
      properties:
        StatelessRuleGroups:
          allOf:
            - $ref: "#/components/schemas/StatelessRuleGroupList"
            - description: "The stateless rule groups that are used in the Network Firewall
                firewall policy. "
        StatelessDefaultActions:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallActionList"
            - description: "The actions to take on packets that don't match any of the
                stateless rule groups. "
        StatelessFragmentDefaultActions:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallActionList"
            - description: "The actions to take on packet fragments that don't match any of
                the stateless rule groups. "
        StatelessCustomActions:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallActionList"
            - description: Names of custom actions that are available for use in the stateless
                default actions settings.
        StatefulRuleGroups:
          allOf:
            - $ref: "#/components/schemas/StatefulRuleGroupList"
            - description: "The stateful rule groups that are used in the Network Firewall
                firewall policy. "
      description: The definition of the AWS Network Firewall firewall policy.
    NetworkFirewallPolicyModifiedViolation:
      type: object
      properties:
        ViolationTarget:
          allOf:
            - $ref: "#/components/schemas/ViolationTarget"
            - description: The ID of the AWS Network Firewall or VPC resource that's in
                violation.
        CurrentPolicyDescription:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallPolicyDescription"
            - description: "The policy that's currently in use in the individual account. "
        ExpectedPolicyDescription:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallPolicyDescription"
            - description: "The policy that should be in use in the individual account in
                order to be compliant. "
      description: "Violation details for AWS Network Firewall for a firewall policy
        that has a different <a>NetworkFirewallPolicyDescription</a> than is
        required by the Firewall Manager policy. "
    NetworkFirewallResourceName:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 128
    ReferenceRule:
      type: string
    TargetViolationReasons:
      type: array
      items:
        $ref: "#/components/schemas/TargetViolationReason"
    PartialMatch:
      type: object
      properties:
        Reference:
          allOf:
            - $ref: "#/components/schemas/ReferenceRule"
            - description: The reference rule from the master security group of the AWS
                Firewall Manager policy.
        TargetViolationReasons:
          allOf:
            - $ref: "#/components/schemas/TargetViolationReasons"
            - description: The violation reason.
      description: The reference rule that partially matches the
        <code>ViolationTarget</code> rule and violation reason.
    PolicyUpdateToken:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 1024
    SecurityServicePolicyData:
      type: object
      required:
        - Type
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/SecurityServiceType"
            - description: The service that the policy is using to protect the resources. This
                specifies the type of policy that is created, either an AWS WAF
                policy, a Shield Advanced policy, or a security group policy.
                For security group policies, Firewall Manager supports one
                security group for each common policy and for each content audit
                policy. This is an adjustable limit that you can increase by
                contacting AWS Support.
        ManagedServiceData:
          allOf:
            - $ref: "#/components/schemas/ManagedServiceData"
            - description: "<p>Details about the service that are specific to the service
                type, in JSON format. For service type
                <code>SHIELD_ADVANCED</code>, this is an empty string.</p> <ul>
                <li> <p>Example: <code>NETWORK_FIREWALL</code> </p> <p>
                <code>\"{\\\"type\\\":\\\"NETWORK_FIREWALL\\\",\\\"networkFirew\
                allStatelessRuleGroupReferences\\\":[{\\\"resourceARN\\\":\\\"a\
                rn:aws:network-firewall:us-west-1:1234567891011:stateless-ruleg\
                roup/rulegroup2\\\",\\\"priority\\\":10}],\\\"networkFirewallSt\
                atelessDefaultActions\\\":[\\\"aws:pass\\\",\\\"custom1\\\"],\\\
                \"networkFirewallStatelessFragmentDefaultActions\\\":[\\\"custo\
                m2\\\",\\\"aws:pass\\\"],\\\"networkFirewallStatelessCustomActi\
                ons\\\":[{\\\"actionName\\\":\\\"custom1\\\",\\\"actionDefiniti\
                on\\\":{\\\"publishMetricAction\\\":{\\\"dimensions\\\":[{\\\"v\
                alue\\\":\\\"dimension1\\\"}]}}},{\\\"actionName\\\":\\\"custom2\
                \\\",\\\"actionDefinition\\\":{\\\"publishMetricAction\\\":{\\\
                \"dimensions\\\":[{\\\"value\\\":\\\"dimension2\\\"}]}}}],\\\"n\
                etworkFirewallStatefulRuleGroupReferences\\\":[{\\\"resourceARN\
                \\\":\\\"arn:aws:network-firewall:us-west-1:1234567891011:state\
                ful-rulegroup/rulegroup1\\\"}],\\\"networkFirewallOrchestration\
                Config\\\":{\\\"singleFirewallEndpointPerVPC\\\":true,\\\"allow\
                edIPV4CidrList\\\":[\\\"10.24.34.0/28\\\"]} }\"</code> </p>
                </li> <li> <p>Example: <code>WAFV2</code> </p> <p>
                <code>\"{\\\"type\\\":\\\"WAFV2\\\",\\\"preProcessRuleGroups\\\
                \":[{\\\"ruleGroupArn\\\":null,\\\"overrideAction\\\":{\\\"type\
                \\\":\\\"NONE\\\"},\\\"managedRuleGroupIdentifier\\\":{\\\"vers\
                ion\\\":null,\\\"vendorName\\\":\\\"AWS\\\",\\\"managedRuleGrou\
                pName\\\":\\\"AWSManagedRulesAmazonIpReputationList\\\"},\\\"ru\
                leGroupType\\\":\\\"ManagedRuleGroup\\\",\\\"excludeRules\\\":[\
                ]}],\\\"postProcessRuleGroups\\\":[],\\\"defaultAction\\\":{\\\
                \"type\\\":\\\"ALLOW\\\"},\\\"overrideCustomerWebACLAssociation\
                \\\":false,\\\"loggingConfiguration\\\":{\\\"logDestinationConf\
                igs\\\":[\\\"arn:aws:firehose:us-west-2:12345678912:deliverystr\
                eam/aws-waf-logs-fms-admin-destination\\\"],\\\"redactedFields\\\
                \":[{\\\"redactedFieldType\\\":\\\"SingleHeader\\\",\\\"redacte\
                dFieldValue\\\":\\\"Cookies\\\"},{\\\"redactedFieldType\\\":\\\
                \"Method\\\"}]}}\"</code> </p> <p>In the
                <code>loggingConfiguration</code>, you can specify one
                <code>logDestinationConfigs</code>, you can optionally provide
                up to 20 <code>redactedFields</code>, and the
                <code>RedactedFieldType</code> must be one of <code>URI</code>,
                <code>QUERY_STRING</code>, <code>HEADER</code>, or
                <code>METHOD</code>.</p> </li> <li> <p>Example: <code>WAF
                Classic</code> </p> <p> <code>\"{\\\"type\\\": \\\"WAF\\\",
                \\\"ruleGroups\\\":
                [{\\\"id\\\":\\\"12345678-1bcd-9012-efga-0987654321ab\\\",
                \\\"overrideAction\\\" : {\\\"type\\\": \\\"COUNT\\\"}}],
                \\\"defaultAction\\\": {\\\"type\\\": \\\"BLOCK\\\"}}\"</code>
                </p> </li> <li> <p>Example: <code>SECURITY_GROUPS_COMMON</code>
                </p> <p>
                <code>\"{\\\"type\\\":\\\"SECURITY_GROUPS_COMMON\\\",\\\"revert\
                ManualSecurityGroupChanges\\\":false,\\\"exclusiveResourceSecur\
                ityGroupManagement\\\":false,
                \\\"applyToAllEC2InstanceENIs\\\":false,\\\"securityGroups\\\":\
                [{\\\"id\\\":\\\" sg-000e55995d61a06bd\\\"}]}\"</code> </p>
                </li> <li> <p>Example:
                <code>SECURITY_GROUPS_CONTENT_AUDIT</code> </p> <p>
                <code>\"{\\\"type\\\":\\\"SECURITY_GROUPS_CONTENT_AUDIT\\\",\\\
                \"securityGroups\\\":[{\\\"id\\\":\\\"sg-000e55995d61a06bd\\\"}\
                ],\\\"securityGroupAction\\\":{\\\"type\\\":\\\"ALLOW\\\"}}\"</\
                code> </p> <p>The security group action for content audit can be
                <code>ALLOW</code> or <code>DENY</code>. For <code>ALLOW</code>,
                all in-scope security group rules must be within the allowed
                range of the policy's security group rules. For
                <code>DENY</code>, all in-scope security group rules must not
                contain a value or a range that matches a rule value or range in
                the policy security group.</p> </li> <li> <p>Example:
                <code>SECURITY_GROUPS_USAGE_AUDIT</code> </p> <p>
                <code>\"{\\\"type\\\":\\\"SECURITY_GROUPS_USAGE_AUDIT\\\",\\\"d\
                eleteUnusedSecurityGroups\\\":true,\\\"coalesceRedundantSecurit\
                yGroups\\\":true}\"</code> </p> </li> </ul>"
      description: Details about the security service that is being used to protect
        the resources.
    ResourceTypeList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceType"
    ResourceTags:
      type: array
      items:
        $ref: "#/components/schemas/ResourceTag"
      minItems: 0
      maxItems: 8
    PolicyComplianceStatus:
      type: object
      properties:
        PolicyOwner:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The AWS account that created the AWS Firewall Manager policy.
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the AWS Firewall Manager policy.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the AWS Firewall Manager policy.
        MemberAccount:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The member account ID.
        EvaluationResults:
          allOf:
            - $ref: "#/components/schemas/EvaluationResults"
            - description: An array of <code>EvaluationResult</code> objects.
        LastUpdated:
          allOf:
            - $ref: "#/components/schemas/TimeStamp"
            - description: Timestamp of the last update to the <code>EvaluationResult</code>
                objects.
        IssueInfoMap:
          allOf:
            - $ref: "#/components/schemas/IssueInfoMap"
            - description: Details about problems with dependent services, such as AWS WAF or
                AWS Config, that are causing a resource to be noncompliant. The
                details include the name of the dependent service and the error
                message received that indicates the problem with the service.
      description: Indicates whether the account is compliant with the specified
        policy. An account is considered noncompliant if it includes resources
        that are not protected by the policy, for AWS WAF and Shield Advanced
        policies, or that are noncompliant with the policy, for security group
        policies.
    PolicySummary:
      type: object
      properties:
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the specified policy.
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/PolicyId"
            - description: The ID of the specified policy.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the specified policy.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - description: The type of resource protected by or in scope of the policy. This
                is in the format shown in the <a
                href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">AWS
                Resource Types Reference</a>. For AWS WAF and Shield Advanced,
                examples include
                <code>AWS::ElasticLoadBalancingV2::LoadBalancer</code> and
                <code>AWS::CloudFront::Distribution</code>. For a security group
                common policy, valid values are
                <code>AWS::EC2::NetworkInterface</code> and
                <code>AWS::EC2::Instance</code>. For a security group content
                audit policy, valid values are
                <code>AWS::EC2::SecurityGroup</code>,
                <code>AWS::EC2::NetworkInterface</code>, and
                <code>AWS::EC2::Instance</code>. For a security group usage
                audit policy, the value is <code>AWS::EC2::SecurityGroup</code>.
                For an AWS Network Firewall policy, the value is
                <code>AWS::EC2::VPC</code>.
        SecurityServiceType:
          allOf:
            - $ref: "#/components/schemas/SecurityServiceType"
            - description: The service that the policy is using to protect the resources. This
                specifies the type of policy that is created, either an AWS WAF
                policy, a Shield Advanced policy, or a security group policy.
        RemediationEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates if the policy should be automatically applied to new
                resources.
      description: "Details of the AWS Firewall Manager policy. "
    PreviousListVersion:
      type: string
      pattern: ^\d{1,2}$
      minLength: 1
      maxLength: 2
    ProtocolsList:
      type: array
      items:
        $ref: "#/components/schemas/Protocol"
    PreviousProtocolsList:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ProtocolsList"
    ProtocolsListDataSummary:
      type: object
      properties:
        ListArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The Amazon Resource Name (ARN) of the specified protocols list.
        ListId:
          allOf:
            - $ref: "#/components/schemas/ListId"
            - description: The ID of the specified protocols list.
        ListName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the specified protocols list.
        ProtocolsList:
          allOf:
            - $ref: "#/components/schemas/ProtocolsList"
            - description: An array of protocols in the AWS Firewall Manager protocols list.
      description: Details of the AWS Firewall Manager protocols list.
    RemediationActionDescription:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    RemediationActionType:
      type: string
      enum:
        - REMOVE
        - MODIFY
    ResourceTagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    ResourceTagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      maxLength: 256
    ResourceTag:
      type: object
      required:
        - Key
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/ResourceTagKey"
            - description: The resource tag key.
        Value:
          allOf:
            - $ref: "#/components/schemas/ResourceTagValue"
            - description: The resource tag value.
      description: The resource tags that AWS Firewall Manager uses to determine if a
        particular resource should be included or excluded from the AWS Firewall
        Manager policy. Tags enable you to categorize your AWS resources in
        different ways, for example, by purpose, owner, or environment. Each tag
        consists of a key and an optional value. Firewall Manager combines the
        tags with "AND" so that, if you add more than one tag to a policy scope,
        a resource must have all the specified tags to be included or excluded.
        For more information, see <a
        href="https://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/tag-editor.html">Working
        with Tag Editor</a>.
    ResourceViolation:
      type: object
      properties:
        AwsVPCSecurityGroupViolation:
          allOf:
            - $ref: "#/components/schemas/AwsVPCSecurityGroupViolation"
            - description: Violation details for security groups.
        AwsEc2NetworkInterfaceViolation:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkInterfaceViolation"
            - description: Violation details for network interface.
        AwsEc2InstanceViolation:
          allOf:
            - $ref: "#/components/schemas/AwsEc2InstanceViolation"
            - description: Violation details for an EC2 instance.
        NetworkFirewallMissingFirewallViolation:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallMissingFirewallViolation"
            - description: "Violation detail for an Network Firewall policy that indicates
                that a subnet has no Firewall Manager managed firewall in its
                VPC. "
        NetworkFirewallMissingSubnetViolation:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallMissingSubnetViolation"
            - description: Violation detail for an Network Firewall policy that indicates that
                an Availability Zone is missing the expected Firewall Manager
                managed subnet.
        NetworkFirewallMissingExpectedRTViolation:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallMissingExpectedRTViolation"
            - description: "Violation detail for an Network Firewall policy that indicates
                that a subnet is not associated with the expected Firewall
                Manager managed route table. "
        NetworkFirewallPolicyModifiedViolation:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallPolicyModifiedViolation"
            - description: Violation detail for an Network Firewall policy that indicates that
                a firewall policy in an individual account has been modified in
                a way that makes it noncompliant. For example, the individual
                account owner might have deleted a rule group, changed the
                priority of a stateless rule group, or changed a policy default
                action.
        DnsRuleGroupPriorityConflictViolation:
          allOf:
            - $ref: "#/components/schemas/DnsRuleGroupPriorityConflictViolation"
            - description: "Violation detail for a DNS Firewall policy that indicates that a
                rule group that Firewall Manager tried to associate with a VPC
                has the same priority as a rule group that's already associated.
                "
        DnsDuplicateRuleGroupViolation:
          allOf:
            - $ref: "#/components/schemas/DnsDuplicateRuleGroupViolation"
            - description: "Violation detail for a DNS Firewall policy that indicates that a
                rule group that Firewall Manager tried to associate with a VPC
                is already associated with the VPC and can't be associated
                again. "
        DnsRuleGroupLimitExceededViolation:
          allOf:
            - $ref: "#/components/schemas/DnsRuleGroupLimitExceededViolation"
            - description: "Violation details for a DNS Firewall policy that indicates that
                the VPC reached the limit for associated DNS Firewall rule
                groups. Firewall Manager tried to associate another rule group
                with the VPC and failed. "
      description: Violation detail based on resource type.
    ResourceViolations:
      type: array
      items:
        $ref: "#/components/schemas/ResourceViolation"
    SecurityGroupRuleDescription:
      type: object
      properties:
        IPV4Range:
          allOf:
            - $ref: "#/components/schemas/CIDR"
            - description: The IPv4 ranges for the security group rule.
        IPV6Range:
          allOf:
            - $ref: "#/components/schemas/CIDR"
            - description: The IPv6 ranges for the security group rule.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the prefix list for the security group rule.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/LengthBoundedString"
            - description: The IP protocol name (<code>tcp</code>, <code>udp</code>,
                <code>icmp</code>, <code>icmpv6</code>) or number.
        FromPort:
          allOf:
            - $ref: "#/components/schemas/IPPortNumber"
            - description: The start of the port range for the TCP and UDP protocols, or an
                ICMP/ICMPv6 type number. A value of <code>-1</code> indicates
                all ICMP/ICMPv6 types.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/IPPortNumber"
            - description: The end of the port range for the TCP and UDP protocols, or an
                ICMP/ICMPv6 code. A value of <code>-1</code> indicates all
                ICMP/ICMPv6 codes.
      description: Describes a set of permissions for a security group rule.
    SecurityGroupRemediationAction:
      type: object
      properties:
        RemediationActionType:
          allOf:
            - $ref: "#/components/schemas/RemediationActionType"
            - description: The remediation action that will be performed.
        Description:
          allOf:
            - $ref: "#/components/schemas/RemediationActionDescription"
            - description: Brief description of the action that will be performed.
        RemediationResult:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleDescription"
            - description: The final state of the rule specified in the
                <code>ViolationTarget</code> after it is remediated.
        IsDefaultAction:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates if the current action is the default action.
      description: Remediation option for the rule specified in the
        <code>ViolationTarget</code>.
    StatefulRuleGroup:
      type: object
      properties:
        RuleGroupName:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallResourceName"
            - description: The name of the rule group.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The resource ID of the rule group.
      description: "AWS Network Firewall stateful rule group, used in a
        <a>NetworkFirewallPolicyDescription</a>. "
    StatelessRuleGroupPriority:
      type: integer
      minimum: 1
      maximum: 65535
    StatelessRuleGroup:
      type: object
      properties:
        RuleGroupName:
          allOf:
            - $ref: "#/components/schemas/NetworkFirewallResourceName"
            - description: The name of the rule group.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The resource ID of the rule group.
        Priority:
          allOf:
            - $ref: "#/components/schemas/StatelessRuleGroupPriority"
            - description: "The priority of the rule group. AWS Network Firewall evaluates the
                stateless rule groups in a firewall policy starting from the
                lowest priority setting. "
      description: "AWS Network Firewall stateless rule group, used in a
        <a>NetworkFirewallPolicyDescription</a>. "
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: Part of the key:value pair that defines a tag. You can use a tag
                key to describe a category of information, such as "customer."
                Tag keys are case-sensitive.
        Value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: 'Part of the key:value pair that defines a tag. You can use a tag
                value to describe a specific value within a category, such as
                "companyA" or "companyB." Tag values are case-sensitive. '
      description: 'A collection of key:value pairs associated with an AWS resource.
        The key:value pair can be anything you define. Typically, the tag key
        represents a category (such as "environment") and the tag value
        represents a specific value within that category (such as "test,"
        "development," or "production"). You can add up to 50 tags to each AWS
        resource. '
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 0
      maxItems: 200
security:
  - hmac: []
